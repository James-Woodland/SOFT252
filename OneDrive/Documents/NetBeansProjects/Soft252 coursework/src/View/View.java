/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import PatientManagementSystem.Accounts.Admin;
import PatientManagementSystem.Accounts.AllAccounts;
import PatientManagementSystem.Accounts.Doctor;
import PatientManagementSystem.Accounts.Patient;
import PatientManagementSystem.Accounts.Secretary;
import PatientManagementSystem.DoctorFuntionality.ProposeAppointments;
import PatientManagementSystem.Login.AdminLogin;
import PatientManagementSystem.Login.DoctorLogin;
import PatientManagementSystem.Login.Login;
import PatientManagementSystem.Login.PatientLogin;
import PatientManagementSystem.Login.SecretaryLogin;
import PatientManagementSystem.PatientFunctionality.CreateAccountRequest;
import PatientManagementSystem.Serialiser.Serialiser;
import PatientManagementSystem.System.AccountFinder;
import PatientManagementSystem.System.Appointment;
import PatientManagementSystem.System.Medicine.AllMedicines;
import PatientManagementSystem.System.Medicine.Medicine;
import PatientManagementSystem.System.Prescription;
import PatientManagementSystem.System.RemoveAccountRequest;
import java.awt.CardLayout;
import java.util.ArrayList;

/**
 *
 * @author james
 */
public class View extends javax.swing.JFrame {   

    /**
     *
     */
    public Admin AdminAccount;

    /**
     *
     */
    public Patient PatientAccount;

    /**
     *
     */
    public int PatientIndex;

    /**
     *
     */
    public Secretary SecretaryAccount;

    /**
     *
     */
    public int SecretaryIndex;

    /**
     *
     */
    public Doctor DoctorAccount;

    /**
     *
     */
    public String PreviousPage;
    Serialiser accountSerialiser = new Serialiser("AllAccounts");
    Serialiser medicineSerialiser = new Serialiser("AllMedicines");
    
    /**
     * Creates new form View
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        JDiaAppointmentNotification = new javax.swing.JDialog();
        jButton14 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        JDiaPrescriptionNotification = new javax.swing.JDialog();
        jButton13 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        JDiaRemovalNotification = new javax.swing.JDialog();
        jButton12 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        JDiaAccounRequestNotification = new javax.swing.JDialog();
        jButton11 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        JDiaMedicineRequest = new javax.swing.JDialog();
        jLabel36 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        PnlLogin = new javax.swing.JPanel();
        BtnPatientAccount = new javax.swing.JButton();
        BtnLoginRequest = new javax.swing.JButton();
        TxtUsername = new javax.swing.JTextField();
        TxtPassword = new javax.swing.JTextField();
        LblLoginUsername = new javax.swing.JLabel();
        LblLoginPassword = new javax.swing.JLabel();
        CmbLoginAccountType = new javax.swing.JComboBox<>();
        LblLoginAccountTYpe = new javax.swing.JLabel();
        PnlRequestPatientAccount = new javax.swing.JPanel();
        TxtPotentialName = new javax.swing.JTextField();
        TxtPotentialAddress = new javax.swing.JTextField();
        CmbPotentialGender = new javax.swing.JComboBox<>();
        BtnPatientAccountRequest = new javax.swing.JButton();
        BtnBackToLogin = new javax.swing.JButton();
        LblPotentialName = new javax.swing.JLabel();
        LblPotentialAddress = new javax.swing.JLabel();
        LblPotentialPassword = new javax.swing.JLabel();
        LblPotentialGender = new javax.swing.JLabel();
        LblPotentialDoB = new javax.swing.JLabel();
        TxtPotentialPassword = new javax.swing.JTextField();
        TxtPotentialDoB = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        PnlAdminMainPage = new javax.swing.JPanel();
        LblAdminMainPage = new javax.swing.JLabel();
        BtnAdmCreateAccountPage = new javax.swing.JButton();
        BtnRemoveAccountPage = new javax.swing.JButton();
        btnViewRatingsPage = new javax.swing.JButton();
        BtnGenerateFeedbackPage = new javax.swing.JButton();
        CmbChooseDoctorForFeedback = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        BtnLogOutAdmin = new javax.swing.JButton();
        PnlViewDoctorRatings = new javax.swing.JPanel();
        CmbChooseDoctorForRating = new javax.swing.JComboBox<>();
        LblRatedDoctorRating = new javax.swing.JLabel();
        LblRatedDoctorID = new javax.swing.JLabel();
        LblRatedDoctorName = new javax.swing.JLabel();
        BtnBackButton = new javax.swing.JButton();
        PnlCreateAccount = new javax.swing.JPanel();
        LblAdmCreateAccountName = new javax.swing.JLabel();
        LblAdmCreateAccountPassword = new javax.swing.JLabel();
        LblAdmCreateAccountType = new javax.swing.JLabel();
        LblAdmCreateAccountAddress = new javax.swing.JLabel();
        TxtAdmCreateAccountName = new javax.swing.JTextField();
        TxtAdmCreateAccountPassword = new javax.swing.JTextField();
        TxtAdmCreateAccountAddress = new javax.swing.JTextField();
        CmbAdmCreateAccountType = new javax.swing.JComboBox<>();
        BtnAdmCreateAccount = new javax.swing.JButton();
        BtnAdmBack1 = new javax.swing.JButton();
        PnlRemoveAccounts = new javax.swing.JPanel();
        TxtAccountToBeRemoved = new javax.swing.JTextField();
        CmbToBeRemovedAccountType = new javax.swing.JComboBox<>();
        LblToBeRemovedID = new javax.swing.JLabel();
        LblToBeRemovedAccountType = new javax.swing.JLabel();
        BtnRemoveAccount = new javax.swing.JButton();
        BtnAdmBack2 = new javax.swing.JButton();
        PnlGenerateFeedback = new javax.swing.JPanel();
        BtnAdmBack4 = new javax.swing.JButton();
        LblFeedbackDoctorName = new javax.swing.JLabel();
        CmbSelectComment = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtAreaFeedbackComment = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        LblFeedbackRating = new javax.swing.JLabel();
        PnlPatientMainPage = new javax.swing.JPanel();
        LblPatientMainPage = new javax.swing.JLabel();
        BtnrequestAppointmentPage = new javax.swing.JButton();
        BtnRateDoctorPage = new javax.swing.JButton();
        btnViewOwnHistoryPage = new javax.swing.JButton();
        BtnViewAppointmentPage = new javax.swing.JButton();
        BtnViewPrescriptionPage = new javax.swing.JButton();
        BtnPtnViewDoctorRatings = new javax.swing.JButton();
        BtnRequestAccountTermination = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TxtAccountTerminationPassword = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BtnLogOutPatient = new javax.swing.JButton();
        PnlRequestAppointment = new javax.swing.JPanel();
        TxtPotentialDate1 = new javax.swing.JTextField();
        TxtPotentialDate2 = new javax.swing.JTextField();
        TxtPotentialDate3 = new javax.swing.JTextField();
        CmbPotentialDoctor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BtnRequestAppointment = new javax.swing.JButton();
        btnBackToPatientMain1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        PnlRateDoctors = new javax.swing.JPanel();
        BtnBackToPatientMainPage2 = new javax.swing.JButton();
        CmbDoctorToBeRated = new javax.swing.JComboBox<>();
        CmbDoctorRating = new javax.swing.JComboBox<>();
        BtnSubmitDoctorFeedback = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        TxtAreaComment = new javax.swing.JTextArea();
        PnlViewOwnHistory = new javax.swing.JPanel();
        BtnBacktoPatientMainPage = new javax.swing.JButton();
        CmbChooseAppointmentHistoryItem = new javax.swing.JComboBox<>();
        LblHistoryDoctorName = new javax.swing.JLabel();
        LblAppointmentDate = new javax.swing.JLabel();
        PnlViewAppointment = new javax.swing.JPanel();
        btnbackToMainPatientPage2 = new javax.swing.JButton();
        LblAppointmentDoctorID = new javax.swing.JLabel();
        LblPotentialDate1 = new javax.swing.JLabel();
        LblPotentialDate2 = new javax.swing.JLabel();
        LblPotentialDate3 = new javax.swing.JLabel();
        LblConfirmedDate = new javax.swing.JLabel();
        PnlViewPrescription = new javax.swing.JPanel();
        BtnBackToMainPatientPage3 = new javax.swing.JButton();
        LblMedicineName = new javax.swing.JLabel();
        LblDosage = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TxtAreaDoctorNote = new javax.swing.JTextArea();
        PnlDoctorMainPage = new javax.swing.JPanel();
        LblDoctorMainPage = new javax.swing.JLabel();
        BtnWritePrescriptionPage = new javax.swing.JButton();
        BtnCreateNewMedicinePage = new javax.swing.JButton();
        BtnProposeAppointmentPage = new javax.swing.JButton();
        btnDocViewAppointmentPage = new javax.swing.JButton();
        BtnMakeNotesPage = new javax.swing.JButton();
        CmbSelectPatientForHistory = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        BtnLogOutDoctor = new javax.swing.JButton();
        PnlWritePrescription = new javax.swing.JPanel();
        BtnBackToDoctorMain1 = new javax.swing.JButton();
        CmbChoosePrescriptionPatient = new javax.swing.JComboBox<>();
        CmbChoosePrescriptionMedicine = new javax.swing.JComboBox<>();
        SpnChoosePresciptionQuantity = new javax.swing.JSpinner();
        SpnChoosePresciptionDosage = new javax.swing.JSpinner();
        jScrollPane5 = new javax.swing.JScrollPane();
        TxtAreaPrescriptionNote = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        PnlCreateNewMedicine = new javax.swing.JPanel();
        BtnDoctorBackButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnCreateMedicineOrder = new javax.swing.JButton();
        TxtNewMedicineName = new javax.swing.JTextField();
        SpnNewMedicineRestockAmount = new javax.swing.JSpinner();
        PnlProposeAppointment = new javax.swing.JPanel();
        btnBackToDoctorMainPage = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        TxtPotentialDate4 = new javax.swing.JTextField();
        TxtPotentialDate5 = new javax.swing.JTextField();
        TxtPotentialDate6 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        CmbSelectPatientForAppointment = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        ChkAppointmentConfirmed = new javax.swing.JCheckBox();
        PnlViewAppointments = new javax.swing.JPanel();
        BackToMainDoctorPage = new javax.swing.JButton();
        LblAppointmentPatientID = new javax.swing.JLabel();
        LblPotentialDate4 = new javax.swing.JLabel();
        LblPotentialDate5 = new javax.swing.JLabel();
        LblPotentialDate6 = new javax.swing.JLabel();
        LblConfirmedDate1 = new javax.swing.JLabel();
        CmbSelectAppointment = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        PnlMakeNotes = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        CmbSelectPatientForNote = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TxtAreaCreatePatientNote = new javax.swing.JTextArea();
        BtnAddPatientNote = new javax.swing.JButton();
        PnlSecretaryMainPage = new javax.swing.JPanel();
        LblSecretaryMainPage = new javax.swing.JLabel();
        BtnCreateAppointmentPage = new javax.swing.JButton();
        BtnMedicinePage = new javax.swing.JButton();
        BtnApporvePatientAccountsPage = new javax.swing.JButton();
        BtnApproveRemovalRequestPage = new javax.swing.JButton();
        BtnLogOutSecretary = new javax.swing.JButton();
        PnlCreateAppointment = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        TxtPotentialDate7 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        TxtPotentialDate8 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        TxtPotentialDate9 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        CmbSelectPatientForAppointment1 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        CmbSelectDoctorForAppointment = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        PnlMedicine = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        CmbSelectMedicine = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        SpnRestockAmountSec = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        btnRestockMedcine = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        SpnGiveMedicineAmount = new javax.swing.JSpinner();
        BtnGiveMedicine = new javax.swing.JButton();
        LblMedicineStock = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        PnlPatientAccountRequests = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        LblPotentialPatientName = new javax.swing.JLabel();
        LblPotentialPatientAddress = new javax.swing.JLabel();
        LblPotentialPatientPassword = new javax.swing.JLabel();
        LblPotentialPatientGender = new javax.swing.JLabel();
        lblPotentialPatientDoB = new javax.swing.JLabel();
        CmbSelectAccountRequest = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        BtnApproveAccountRequest = new javax.swing.JButton();
        PnlApproveRemovalRequest = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        CmbSelectAccountRemovalRequest = new javax.swing.JComboBox<>();
        LblPotentialPatientName1 = new javax.swing.JLabel();
        LblPotentialPatientAddress1 = new javax.swing.JLabel();
        LblPotentialPatientPassword1 = new javax.swing.JLabel();
        LblPotentialPatientGender1 = new javax.swing.JLabel();
        lblPotentialPatientDoB1 = new javax.swing.JLabel();
        BtnApproveRemovalRequest = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        JDiaAppointmentNotification.setMinimumSize(new java.awt.Dimension(245, 127));
        JDiaAppointmentNotification.setPreferredSize(new java.awt.Dimension(245, 127));

        jButton14.setText("OK");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel41.setText("You Have A New Appointment");

        javax.swing.GroupLayout JDiaAppointmentNotificationLayout = new javax.swing.GroupLayout(JDiaAppointmentNotification.getContentPane());
        JDiaAppointmentNotification.getContentPane().setLayout(JDiaAppointmentNotificationLayout);
        JDiaAppointmentNotificationLayout.setHorizontalGroup(
            JDiaAppointmentNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaAppointmentNotificationLayout.createSequentialGroup()
                .addGroup(JDiaAppointmentNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JDiaAppointmentNotificationLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel41))
                    .addGroup(JDiaAppointmentNotificationLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jButton14)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        JDiaAppointmentNotificationLayout.setVerticalGroup(
            JDiaAppointmentNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JDiaAppointmentNotificationLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel41)
                .addGap(27, 27, 27)
                .addComponent(jButton14)
                .addGap(29, 29, 29))
        );

        JDiaPrescriptionNotification.setMinimumSize(new java.awt.Dimension(245, 127));

        jButton13.setText("OK");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel40.setText("You Have A New Prescription");

        javax.swing.GroupLayout JDiaPrescriptionNotificationLayout = new javax.swing.GroupLayout(JDiaPrescriptionNotification.getContentPane());
        JDiaPrescriptionNotification.getContentPane().setLayout(JDiaPrescriptionNotificationLayout);
        JDiaPrescriptionNotificationLayout.setHorizontalGroup(
            JDiaPrescriptionNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaPrescriptionNotificationLayout.createSequentialGroup()
                .addGroup(JDiaPrescriptionNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JDiaPrescriptionNotificationLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(JDiaPrescriptionNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(jButton13)))
                    .addGroup(JDiaPrescriptionNotificationLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel40)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        JDiaPrescriptionNotificationLayout.setVerticalGroup(
            JDiaPrescriptionNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JDiaPrescriptionNotificationLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel40)
                .addGap(1, 1, 1)
                .addComponent(jLabel39)
                .addGap(30, 30, 30)
                .addComponent(jButton13)
                .addGap(25, 25, 25))
        );

        JDiaRemovalNotification.setMinimumSize(new java.awt.Dimension(224, 127));

        jButton12.setText("OK");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel38.setText("You Have New Account Removal Requests");

        javax.swing.GroupLayout JDiaRemovalNotificationLayout = new javax.swing.GroupLayout(JDiaRemovalNotification.getContentPane());
        JDiaRemovalNotification.getContentPane().setLayout(JDiaRemovalNotificationLayout);
        JDiaRemovalNotificationLayout.setHorizontalGroup(
            JDiaRemovalNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaRemovalNotificationLayout.createSequentialGroup()
                .addGroup(JDiaRemovalNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JDiaRemovalNotificationLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButton12))
                    .addGroup(JDiaRemovalNotificationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel38)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JDiaRemovalNotificationLayout.setVerticalGroup(
            JDiaRemovalNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JDiaRemovalNotificationLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addGap(29, 29, 29)
                .addComponent(jButton12)
                .addGap(20, 20, 20))
        );

        JDiaAccounRequestNotification.setMinimumSize(new java.awt.Dimension(261, 127));

        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel37.setText("You Have New Account Requests");

        javax.swing.GroupLayout JDiaAccounRequestNotificationLayout = new javax.swing.GroupLayout(JDiaAccounRequestNotification.getContentPane());
        JDiaAccounRequestNotification.getContentPane().setLayout(JDiaAccounRequestNotificationLayout);
        JDiaAccounRequestNotificationLayout.setHorizontalGroup(
            JDiaAccounRequestNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaAccounRequestNotificationLayout.createSequentialGroup()
                .addGroup(JDiaAccounRequestNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JDiaAccounRequestNotificationLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton11))
                    .addGroup(JDiaAccounRequestNotificationLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel37)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        JDiaAccounRequestNotificationLayout.setVerticalGroup(
            JDiaAccounRequestNotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JDiaAccounRequestNotificationLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel37)
                .addGap(27, 27, 27)
                .addComponent(jButton11)
                .addGap(24, 24, 24))
        );

        JDiaMedicineRequest.setMinimumSize(new java.awt.Dimension(343, 127));

        jLabel36.setText("You Have New Medicine Requests Please Consider Restocking");

        jButton9.setText("OK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JDiaMedicineRequestLayout = new javax.swing.GroupLayout(JDiaMedicineRequest.getContentPane());
        JDiaMedicineRequest.getContentPane().setLayout(JDiaMedicineRequestLayout);
        JDiaMedicineRequestLayout.setHorizontalGroup(
            JDiaMedicineRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaMedicineRequestLayout.createSequentialGroup()
                .addGroup(JDiaMedicineRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JDiaMedicineRequestLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel36))
                    .addGroup(JDiaMedicineRequestLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jButton9)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        JDiaMedicineRequestLayout.setVerticalGroup(
            JDiaMedicineRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JDiaMedicineRequestLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        BtnPatientAccount.setText("Request Patient Account");
        BtnPatientAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPatientAccountActionPerformed(evt);
            }
        });

        BtnLoginRequest.setText("Login");
        BtnLoginRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLoginRequestActionPerformed(evt);
            }
        });

        TxtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPasswordActionPerformed(evt);
            }
        });

        LblLoginUsername.setText("Username");

        LblLoginPassword.setText("Password");

        CmbLoginAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor", "Secretary", "Admin" }));

        LblLoginAccountTYpe.setText("Account Type");

        javax.swing.GroupLayout PnlLoginLayout = new javax.swing.GroupLayout(PnlLogin);
        PnlLogin.setLayout(PnlLoginLayout);
        PnlLoginLayout.setHorizontalGroup(
            PnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlLoginLayout.createSequentialGroup()
                .addGroup(PnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlLoginLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(BtnLoginRequest))
                    .addGroup(PnlLoginLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(PnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LblLoginAccountTYpe)
                            .addGroup(PnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LblLoginUsername)
                                .addComponent(TxtUsername)
                                .addComponent(TxtPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(BtnPatientAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LblLoginPassword)
                                .addComponent(CmbLoginAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        PnlLoginLayout.setVerticalGroup(
            PnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlLoginLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(LblLoginUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LblLoginPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblLoginAccountTYpe)
                .addGap(2, 2, 2)
                .addComponent(CmbLoginAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnLoginRequest)
                .addGap(18, 18, 18)
                .addComponent(BtnPatientAccount)
                .addGap(50, 50, 50))
        );

        mainPanel.add(PnlLogin, "PnlLogin");

        TxtPotentialName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPotentialNameActionPerformed(evt);
            }
        });

        CmbPotentialGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        BtnPatientAccountRequest.setText("Request Account");
        BtnPatientAccountRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPatientAccountRequestActionPerformed(evt);
            }
        });

        BtnBackToLogin.setText("back To Login");
        BtnBackToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackToLoginActionPerformed(evt);
            }
        });

        LblPotentialName.setText("Name");

        LblPotentialAddress.setText("Address");

        LblPotentialPassword.setText("Password");

        LblPotentialGender.setText("Gender");

        LblPotentialDoB.setText("Date Of Birth");

        jLabel43.setText("please Type the date in format dd/mm/yyyy ");

        javax.swing.GroupLayout PnlRequestPatientAccountLayout = new javax.swing.GroupLayout(PnlRequestPatientAccount);
        PnlRequestPatientAccount.setLayout(PnlRequestPatientAccountLayout);
        PnlRequestPatientAccountLayout.setHorizontalGroup(
            PnlRequestPatientAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRequestPatientAccountLayout.createSequentialGroup()
                .addGroup(PnlRequestPatientAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlRequestPatientAccountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnBackToLogin))
                    .addGroup(PnlRequestPatientAccountLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(PnlRequestPatientAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnPatientAccountRequest)
                            .addComponent(LblPotentialDoB)
                            .addComponent(LblPotentialName)
                            .addComponent(LblPotentialAddress)
                            .addComponent(LblPotentialPassword)
                            .addComponent(LblPotentialGender)
                            .addComponent(TxtPotentialName)
                            .addComponent(CmbPotentialGender, 0, 143, Short.MAX_VALUE)
                            .addComponent(TxtPotentialAddress)
                            .addComponent(TxtPotentialPassword)
                            .addComponent(TxtPotentialDoB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel43)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        PnlRequestPatientAccountLayout.setVerticalGroup(
            PnlRequestPatientAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRequestPatientAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBackToLogin)
                .addGap(61, 61, 61)
                .addComponent(LblPotentialName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(LblPotentialAddress)
                .addGap(2, 2, 2)
                .addComponent(TxtPotentialAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(LblPotentialPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialGender)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(CmbPotentialGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialDoB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnlRequestPatientAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtPotentialDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPatientAccountRequest)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        mainPanel.add(PnlRequestPatientAccount, "PnlRequestPatientAccount");

        LblAdminMainPage.setText("Admin Main Page");

        BtnAdmCreateAccountPage.setText("Create Account");
        BtnAdmCreateAccountPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdmCreateAccountPageActionPerformed(evt);
            }
        });

        BtnRemoveAccountPage.setText("Delete Account");
        BtnRemoveAccountPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRemoveAccountPageActionPerformed(evt);
            }
        });

        btnViewRatingsPage.setText("View Ratings");
        btnViewRatingsPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRatingsPageActionPerformed(evt);
            }
        });

        BtnGenerateFeedbackPage.setText("Generate Feedback");
        BtnGenerateFeedbackPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGenerateFeedbackPageActionPerformed(evt);
            }
        });

        jLabel4.setText("Choose Doctor For Report");

        BtnLogOutAdmin.setText("Log Out");
        BtnLogOutAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlAdminMainPageLayout = new javax.swing.GroupLayout(PnlAdminMainPage);
        PnlAdminMainPage.setLayout(PnlAdminMainPageLayout);
        PnlAdminMainPageLayout.setHorizontalGroup(
            PnlAdminMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlAdminMainPageLayout.createSequentialGroup()
                .addGroup(PnlAdminMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlAdminMainPageLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(PnlAdminMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(PnlAdminMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BtnGenerateFeedbackPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewRatingsPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnRemoveAccountPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnAdmCreateAccountPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(PnlAdminMainPageLayout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(LblAdminMainPage))
                                .addComponent(CmbChooseDoctorForFeedback, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(PnlAdminMainPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnLogOutAdmin)))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        PnlAdminMainPageLayout.setVerticalGroup(
            PnlAdminMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlAdminMainPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnLogOutAdmin)
                .addGap(56, 56, 56)
                .addComponent(LblAdminMainPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnAdmCreateAccountPage)
                .addGap(18, 18, 18)
                .addComponent(BtnRemoveAccountPage)
                .addGap(18, 18, 18)
                .addComponent(btnViewRatingsPage)
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbChooseDoctorForFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnGenerateFeedbackPage)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        mainPanel.add(PnlAdminMainPage, "PnlAdminMainPage");

        CmbChooseDoctorForRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbChooseDoctorForRatingActionPerformed(evt);
            }
        });

        LblRatedDoctorID.setText("jLabel2");

        LblRatedDoctorName.setText("jLabel3");

        BtnBackButton.setText("Back To Main Page");
        BtnBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlViewDoctorRatingsLayout = new javax.swing.GroupLayout(PnlViewDoctorRatings);
        PnlViewDoctorRatings.setLayout(PnlViewDoctorRatingsLayout);
        PnlViewDoctorRatingsLayout.setHorizontalGroup(
            PnlViewDoctorRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewDoctorRatingsLayout.createSequentialGroup()
                .addGroup(PnlViewDoctorRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlViewDoctorRatingsLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(PnlViewDoctorRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LblRatedDoctorName)
                            .addComponent(LblRatedDoctorID)
                            .addComponent(CmbChooseDoctorForRating, 0, 162, Short.MAX_VALUE)
                            .addComponent(LblRatedDoctorRating, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(PnlViewDoctorRatingsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnBackButton)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        PnlViewDoctorRatingsLayout.setVerticalGroup(
            PnlViewDoctorRatingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewDoctorRatingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBackButton)
                .addGap(92, 92, 92)
                .addComponent(CmbChooseDoctorForRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblRatedDoctorID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LblRatedDoctorName)
                .addGap(17, 17, 17)
                .addComponent(LblRatedDoctorRating)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        mainPanel.add(PnlViewDoctorRatings, "PnlViewDoctorRatings");

        LblAdmCreateAccountName.setText("Name ");

        LblAdmCreateAccountPassword.setText("Password");

        LblAdmCreateAccountType.setText("Account Type");

        LblAdmCreateAccountAddress.setText("Address");

        CmbAdmCreateAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Doctor", "Secretary" }));

        BtnAdmCreateAccount.setText("Create Account");
        BtnAdmCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdmCreateAccountActionPerformed(evt);
            }
        });

        BtnAdmBack1.setText("Back To Main Page");
        BtnAdmBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdmBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlCreateAccountLayout = new javax.swing.GroupLayout(PnlCreateAccount);
        PnlCreateAccount.setLayout(PnlCreateAccountLayout);
        PnlCreateAccountLayout.setHorizontalGroup(
            PnlCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlCreateAccountLayout.createSequentialGroup()
                .addGroup(PnlCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlCreateAccountLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(PnlCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnAdmCreateAccount)
                            .addComponent(CmbAdmCreateAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PnlCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LblAdmCreateAccountAddress)
                                .addComponent(LblAdmCreateAccountType)
                                .addComponent(LblAdmCreateAccountPassword)
                                .addComponent(LblAdmCreateAccountName)
                                .addComponent(TxtAdmCreateAccountName, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                .addComponent(TxtAdmCreateAccountPassword)
                                .addComponent(TxtAdmCreateAccountAddress))))
                    .addGroup(PnlCreateAccountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnAdmBack1)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        PnlCreateAccountLayout.setVerticalGroup(
            PnlCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlCreateAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnAdmBack1)
                .addGap(56, 56, 56)
                .addComponent(LblAdmCreateAccountName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtAdmCreateAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(LblAdmCreateAccountPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TxtAdmCreateAccountPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LblAdmCreateAccountAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtAdmCreateAccountAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblAdmCreateAccountType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbAdmCreateAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnAdmCreateAccount)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        mainPanel.add(PnlCreateAccount, "PnlCreateAccount");

        CmbToBeRemovedAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Secretary" }));

        LblToBeRemovedID.setText("Account ID");

        LblToBeRemovedAccountType.setText("Account Type");

        BtnRemoveAccount.setText("Remove Account");
        BtnRemoveAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRemoveAccountActionPerformed(evt);
            }
        });

        BtnAdmBack2.setText("Back To Main Page");
        BtnAdmBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdmBack2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlRemoveAccountsLayout = new javax.swing.GroupLayout(PnlRemoveAccounts);
        PnlRemoveAccounts.setLayout(PnlRemoveAccountsLayout);
        PnlRemoveAccountsLayout.setHorizontalGroup(
            PnlRemoveAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRemoveAccountsLayout.createSequentialGroup()
                .addGroup(PnlRemoveAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlRemoveAccountsLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(PnlRemoveAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LblToBeRemovedAccountType)
                            .addComponent(LblToBeRemovedID)
                            .addComponent(TxtAccountToBeRemoved)
                            .addComponent(CmbToBeRemovedAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnRemoveAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                    .addGroup(PnlRemoveAccountsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnAdmBack2)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        PnlRemoveAccountsLayout.setVerticalGroup(
            PnlRemoveAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRemoveAccountsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnAdmBack2)
                .addGap(81, 81, 81)
                .addComponent(LblToBeRemovedID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtAccountToBeRemoved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblToBeRemovedAccountType)
                .addGap(3, 3, 3)
                .addComponent(CmbToBeRemovedAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnRemoveAccount)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        mainPanel.add(PnlRemoveAccounts, "PnlRemoveAccounts");

        BtnAdmBack4.setText("Back to Admin Main Page");
        BtnAdmBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdmBack4ActionPerformed(evt);
            }
        });

        LblFeedbackDoctorName.setText("jLabel1");

        CmbSelectComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSelectCommentActionPerformed(evt);
            }
        });

        TxtAreaFeedbackComment.setEditable(false);
        TxtAreaFeedbackComment.setColumns(20);
        TxtAreaFeedbackComment.setRows(5);
        jScrollPane2.setViewportView(TxtAreaFeedbackComment);

        jLabel2.setText("Rating");

        LblFeedbackRating.setText("jLabel3");

        javax.swing.GroupLayout PnlGenerateFeedbackLayout = new javax.swing.GroupLayout(PnlGenerateFeedback);
        PnlGenerateFeedback.setLayout(PnlGenerateFeedbackLayout);
        PnlGenerateFeedbackLayout.setHorizontalGroup(
            PnlGenerateFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlGenerateFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlGenerateFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnAdmBack4)
                    .addComponent(LblFeedbackDoctorName)
                    .addComponent(CmbSelectComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(LblFeedbackRating))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        PnlGenerateFeedbackLayout.setVerticalGroup(
            PnlGenerateFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlGenerateFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnAdmBack4)
                .addGap(18, 18, 18)
                .addComponent(LblFeedbackDoctorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbSelectComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblFeedbackRating)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        mainPanel.add(PnlGenerateFeedback, "PnlGenerateFeedback");

        LblPatientMainPage.setText("Patient Main Page");

        BtnrequestAppointmentPage.setText("Request Appointment");
        BtnrequestAppointmentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnrequestAppointmentPageActionPerformed(evt);
            }
        });

        BtnRateDoctorPage.setText("Rate Doctor");
        BtnRateDoctorPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRateDoctorPageActionPerformed(evt);
            }
        });

        btnViewOwnHistoryPage.setText("View Appointment History");
        btnViewOwnHistoryPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOwnHistoryPageActionPerformed(evt);
            }
        });

        BtnViewAppointmentPage.setText("View Appointment");
        BtnViewAppointmentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewAppointmentPageActionPerformed(evt);
            }
        });

        BtnViewPrescriptionPage.setText("View Prescription");
        BtnViewPrescriptionPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewPrescriptionPageActionPerformed(evt);
            }
        });

        BtnPtnViewDoctorRatings.setText("View Doctor ratings");
        BtnPtnViewDoctorRatings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPtnViewDoctorRatingsActionPerformed(evt);
            }
        });

        BtnRequestAccountTermination.setText("request Account Termination");
        BtnRequestAccountTermination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRequestAccountTerminationActionPerformed(evt);
            }
        });

        jLabel8.setText("Please type in your password to confirm account termination");

        jLabel9.setText("You will remain logged in but will not be able to log back in once the request is terminated");

        BtnLogOutPatient.setText("Log Out");
        BtnLogOutPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlPatientMainPageLayout = new javax.swing.GroupLayout(PnlPatientMainPage);
        PnlPatientMainPage.setLayout(PnlPatientMainPageLayout);
        PnlPatientMainPageLayout.setHorizontalGroup(
            PnlPatientMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlPatientMainPageLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(PnlPatientMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlPatientMainPageLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(PnlPatientMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LblPatientMainPage)
                            .addComponent(BtnPtnViewDoctorRatings)
                            .addComponent(BtnViewPrescriptionPage)
                            .addComponent(BtnViewAppointmentPage)
                            .addComponent(btnViewOwnHistoryPage)
                            .addComponent(BtnRateDoctorPage)
                            .addComponent(BtnrequestAppointmentPage)))
                    .addGroup(PnlPatientMainPageLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(PnlPatientMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnRequestAccountTermination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TxtAccountTerminationPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PnlPatientMainPageLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel8))
                    .addComponent(jLabel9))
                .addGap(46, 46, 46))
            .addGroup(PnlPatientMainPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnLogOutPatient)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PnlPatientMainPageLayout.setVerticalGroup(
            PnlPatientMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlPatientMainPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnLogOutPatient)
                .addGap(5, 5, 5)
                .addComponent(LblPatientMainPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnrequestAppointmentPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRateDoctorPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewOwnHistoryPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnViewAppointmentPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnViewPrescriptionPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPtnViewDoctorRatings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(4, 4, 4)
                .addComponent(TxtAccountTerminationPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRequestAccountTermination)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        mainPanel.add(PnlPatientMainPage, "PnlPatientMainPage");

        TxtPotentialDate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPotentialDate3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Potential Date 1");

        jLabel3.setText("Potential Date 2");

        jLabel5.setText("Potential Date 3");

        jLabel6.setText("Choose Doctor");

        BtnRequestAppointment.setText("Request Appointment");
        BtnRequestAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRequestAppointmentActionPerformed(evt);
            }
        });

        btnBackToPatientMain1.setText("Back To Main Patient Page");
        btnBackToPatientMain1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToPatientMain1ActionPerformed(evt);
            }
        });

        jLabel7.setText("please Type the date in format dd/mm/yyyy ");

        javax.swing.GroupLayout PnlRequestAppointmentLayout = new javax.swing.GroupLayout(PnlRequestAppointment);
        PnlRequestAppointment.setLayout(PnlRequestAppointmentLayout);
        PnlRequestAppointmentLayout.setHorizontalGroup(
            PnlRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRequestAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackToPatientMain1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PnlRequestAppointmentLayout.createSequentialGroup()
                .addContainerGap(155, Short.MAX_VALUE)
                .addGroup(PnlRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(PnlRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BtnRequestAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)
                        .addComponent(TxtPotentialDate3)
                        .addComponent(TxtPotentialDate2)
                        .addComponent(TxtPotentialDate1)
                        .addComponent(CmbPotentialDoctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        PnlRequestAppointmentLayout.setVerticalGroup(
            PnlRequestAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRequestAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackToPatientMain1)
                .addGap(38, 38, 38)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(TxtPotentialDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialDate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbPotentialDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRequestAppointment)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        mainPanel.add(PnlRequestAppointment, "PnlRequestAppointment");

        BtnBackToPatientMainPage2.setText("Back To Patient Main Page");
        BtnBackToPatientMainPage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackToPatientMainPage2ActionPerformed(evt);
            }
        });

        CmbDoctorRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        BtnSubmitDoctorFeedback.setText("Submit Feedback");
        BtnSubmitDoctorFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSubmitDoctorFeedbackActionPerformed(evt);
            }
        });

        TxtAreaComment.setColumns(20);
        TxtAreaComment.setRows(5);
        jScrollPane7.setViewportView(TxtAreaComment);

        javax.swing.GroupLayout PnlRateDoctorsLayout = new javax.swing.GroupLayout(PnlRateDoctors);
        PnlRateDoctors.setLayout(PnlRateDoctorsLayout);
        PnlRateDoctorsLayout.setHorizontalGroup(
            PnlRateDoctorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRateDoctorsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlRateDoctorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnBackToPatientMainPage2)
                    .addComponent(CmbDoctorToBeRated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmbDoctorRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSubmitDoctorFeedback)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        PnlRateDoctorsLayout.setVerticalGroup(
            PnlRateDoctorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlRateDoctorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBackToPatientMainPage2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmbDoctorToBeRated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbDoctorRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnSubmitDoctorFeedback)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jScrollPane7.getAccessibleContext().setAccessibleDescription("");

        mainPanel.add(PnlRateDoctors, "PnlRateDoctors");

        BtnBacktoPatientMainPage.setText("Back To MainPage");
        BtnBacktoPatientMainPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBacktoPatientMainPageActionPerformed(evt);
            }
        });

        CmbChooseAppointmentHistoryItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbChooseAppointmentHistoryItemActionPerformed(evt);
            }
        });

        LblHistoryDoctorName.setText("jLabel10");

        LblAppointmentDate.setText("jLabel10");

        javax.swing.GroupLayout PnlViewOwnHistoryLayout = new javax.swing.GroupLayout(PnlViewOwnHistory);
        PnlViewOwnHistory.setLayout(PnlViewOwnHistoryLayout);
        PnlViewOwnHistoryLayout.setHorizontalGroup(
            PnlViewOwnHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewOwnHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlViewOwnHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlViewOwnHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BtnBacktoPatientMainPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CmbChooseAppointmentHistoryItem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(LblHistoryDoctorName)
                    .addComponent(LblAppointmentDate))
                .addContainerGap(396, Short.MAX_VALUE))
        );
        PnlViewOwnHistoryLayout.setVerticalGroup(
            PnlViewOwnHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewOwnHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBacktoPatientMainPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbChooseAppointmentHistoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblHistoryDoctorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblAppointmentDate)
                .addContainerGap(277, Short.MAX_VALUE))
        );

        mainPanel.add(PnlViewOwnHistory, "PnlViewOwnHistory");

        btnbackToMainPatientPage2.setText("back To Main Patient Page");
        btnbackToMainPatientPage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackToMainPatientPage2ActionPerformed(evt);
            }
        });

        LblAppointmentDoctorID.setText("jLabel10");

        LblPotentialDate1.setText("jLabel10");

        LblPotentialDate2.setText("jLabel10");

        LblPotentialDate3.setText("jLabel10");

        LblConfirmedDate.setText("jLabel10");

        javax.swing.GroupLayout PnlViewAppointmentLayout = new javax.swing.GroupLayout(PnlViewAppointment);
        PnlViewAppointment.setLayout(PnlViewAppointmentLayout);
        PnlViewAppointmentLayout.setHorizontalGroup(
            PnlViewAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlViewAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnbackToMainPatientPage2)
                    .addComponent(LblAppointmentDoctorID)
                    .addComponent(LblPotentialDate1)
                    .addComponent(LblPotentialDate2)
                    .addComponent(LblPotentialDate3)
                    .addComponent(LblConfirmedDate))
                .addContainerGap(356, Short.MAX_VALUE))
        );
        PnlViewAppointmentLayout.setVerticalGroup(
            PnlViewAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnbackToMainPatientPage2)
                .addGap(23, 23, 23)
                .addComponent(LblAppointmentDoctorID)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate1)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate2)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate3)
                .addGap(18, 18, 18)
                .addComponent(LblConfirmedDate)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        mainPanel.add(PnlViewAppointment, "PnlViewAppointment");

        BtnBackToMainPatientPage3.setText("Back To Main Patient Page");
        BtnBackToMainPatientPage3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackToMainPatientPage3ActionPerformed(evt);
            }
        });

        LblMedicineName.setText("jLabel10");

        LblDosage.setText("jLabel10");

        TxtAreaDoctorNote.setColumns(20);
        TxtAreaDoctorNote.setRows(5);
        jScrollPane4.setViewportView(TxtAreaDoctorNote);

        javax.swing.GroupLayout PnlViewPrescriptionLayout = new javax.swing.GroupLayout(PnlViewPrescription);
        PnlViewPrescription.setLayout(PnlViewPrescriptionLayout);
        PnlViewPrescriptionLayout.setHorizontalGroup(
            PnlViewPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewPrescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlViewPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnBackToMainPatientPage3)
                    .addComponent(LblMedicineName)
                    .addComponent(LblDosage)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        PnlViewPrescriptionLayout.setVerticalGroup(
            PnlViewPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewPrescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBackToMainPatientPage3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblMedicineName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblDosage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        mainPanel.add(PnlViewPrescription, "PnlViewPrescription");

        LblDoctorMainPage.setText("Doctor Main Page");

        BtnWritePrescriptionPage.setText("Write Prescription");
        BtnWritePrescriptionPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnWritePrescriptionPageActionPerformed(evt);
            }
        });

        BtnCreateNewMedicinePage.setText("Create New Medicine");
        BtnCreateNewMedicinePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateNewMedicinePageActionPerformed(evt);
            }
        });

        BtnProposeAppointmentPage.setText("Propose Appointment");
        BtnProposeAppointmentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnProposeAppointmentPageActionPerformed(evt);
            }
        });

        btnDocViewAppointmentPage.setText("View Appointments");
        btnDocViewAppointmentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocViewAppointmentPageActionPerformed(evt);
            }
        });

        BtnMakeNotesPage.setText("Make Notes");
        BtnMakeNotesPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMakeNotesPageActionPerformed(evt);
            }
        });

        jButton4.setText("View Selected Patient History");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        BtnLogOutDoctor.setText("Log Out");
        BtnLogOutDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutDoctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlDoctorMainPageLayout = new javax.swing.GroupLayout(PnlDoctorMainPage);
        PnlDoctorMainPage.setLayout(PnlDoctorMainPageLayout);
        PnlDoctorMainPageLayout.setHorizontalGroup(
            PnlDoctorMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                .addGroup(PnlDoctorMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(PnlDoctorMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(LblDoctorMainPage))
                            .addComponent(BtnCreateNewMedicinePage)
                            .addComponent(BtnWritePrescriptionPage)
                            .addComponent(BtnProposeAppointmentPage)
                            .addComponent(btnDocViewAppointmentPage)))
                    .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(BtnMakeNotesPage))
                    .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(PnlDoctorMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CmbSelectPatientForHistory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addGroup(PnlDoctorMainPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnLogOutDoctor)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        PnlDoctorMainPageLayout.setVerticalGroup(
            PnlDoctorMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlDoctorMainPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnLogOutDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(LblDoctorMainPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnWritePrescriptionPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnCreateNewMedicinePage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnProposeAppointmentPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDocViewAppointmentPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnMakeNotesPage)
                .addGap(18, 18, 18)
                .addComponent(CmbSelectPatientForHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(33, 33, 33))
        );

        mainPanel.add(PnlDoctorMainPage, "PnlDoctorMainPage");

        BtnBackToDoctorMain1.setText("Back To Main Doctor Page ");
        BtnBackToDoctorMain1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackToDoctorMain1ActionPerformed(evt);
            }
        });

        TxtAreaPrescriptionNote.setColumns(20);
        TxtAreaPrescriptionNote.setRows(5);
        jScrollPane5.setViewportView(TxtAreaPrescriptionNote);

        jLabel10.setText("Note");

        jLabel11.setText("Dosage");

        jLabel12.setText("Quantity");

        jLabel13.setText("Choose Medicine");

        jLabel14.setText("Choose Patient");

        jButton1.setText("Create Prescription");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlWritePrescriptionLayout = new javax.swing.GroupLayout(PnlWritePrescription);
        PnlWritePrescription.setLayout(PnlWritePrescriptionLayout);
        PnlWritePrescriptionLayout.setHorizontalGroup(
            PnlWritePrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlWritePrescriptionLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(PnlWritePrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBackToDoctorMain1)
                    .addComponent(CmbChoosePrescriptionPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmbChoosePrescriptionMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpnChoosePresciptionQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpnChoosePresciptionDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(342, Short.MAX_VALUE))
        );
        PnlWritePrescriptionLayout.setVerticalGroup(
            PnlWritePrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlWritePrescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnBackToDoctorMain1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(4, 4, 4)
                .addComponent(CmbChoosePrescriptionPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbChoosePrescriptionMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpnChoosePresciptionQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(5, 5, 5)
                .addComponent(SpnChoosePresciptionDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel10)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(17, 17, 17))
        );

        mainPanel.add(PnlWritePrescription, "PnlWritePrescription");

        BtnDoctorBackButton.setText("Back To Doctor Main Page");
        BtnDoctorBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDoctorBackButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("New Medicine Name");

        jLabel16.setText("Amount To Be Ordered");

        btnCreateMedicineOrder.setText("Create Order");
        btnCreateMedicineOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateMedicineOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlCreateNewMedicineLayout = new javax.swing.GroupLayout(PnlCreateNewMedicine);
        PnlCreateNewMedicine.setLayout(PnlCreateNewMedicineLayout);
        PnlCreateNewMedicineLayout.setHorizontalGroup(
            PnlCreateNewMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlCreateNewMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlCreateNewMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlCreateNewMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BtnDoctorBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16)
                        .addComponent(btnCreateMedicineOrder)
                        .addComponent(TxtNewMedicineName))
                    .addComponent(SpnNewMedicineRestockAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        PnlCreateNewMedicineLayout.setVerticalGroup(
            PnlCreateNewMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlCreateNewMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnDoctorBackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TxtNewMedicineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(8, 8, 8)
                .addComponent(SpnNewMedicineRestockAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreateMedicineOrder)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        mainPanel.add(PnlCreateNewMedicine, "PnlCreateNewMedicine");

        btnBackToDoctorMainPage.setText("Back To Doctor Main Page");
        btnBackToDoctorMainPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToDoctorMainPageActionPerformed(evt);
            }
        });

        jLabel19.setText("please Type the date in format dd/mm/yyyy ");

        jLabel20.setText("Potential Date 1");

        jLabel21.setText("Potential Date 2");

        jLabel22.setText("Potential Date 3");

        jLabel23.setText("Select Patient");

        jButton3.setText("Create Appointment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ChkAppointmentConfirmed.setText("Date Confirmed");

        javax.swing.GroupLayout PnlProposeAppointmentLayout = new javax.swing.GroupLayout(PnlProposeAppointment);
        PnlProposeAppointment.setLayout(PnlProposeAppointmentLayout);
        PnlProposeAppointmentLayout.setHorizontalGroup(
            PnlProposeAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlProposeAppointmentLayout.createSequentialGroup()
                .addGroup(PnlProposeAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlProposeAppointmentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBackToDoctorMainPage))
                    .addGroup(PnlProposeAppointmentLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(PnlProposeAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtPotentialDate4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(TxtPotentialDate5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtPotentialDate6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(CmbSelectPatientForAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(jButton3)
                            .addComponent(ChkAppointmentConfirmed))))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        PnlProposeAppointmentLayout.setVerticalGroup(
            PnlProposeAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlProposeAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackToDoctorMainPage)
                .addGap(47, 47, 47)
                .addComponent(jLabel19)
                .addGap(2, 2, 2)
                .addComponent(jLabel20)
                .addGap(2, 2, 2)
                .addComponent(TxtPotentialDate4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialDate5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addGap(5, 5, 5)
                .addComponent(TxtPotentialDate6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel23)
                .addGap(1, 1, 1)
                .addComponent(CmbSelectPatientForAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChkAppointmentConfirmed)
                .addGap(9, 9, 9)
                .addComponent(jButton3)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        mainPanel.add(PnlProposeAppointment, "PnlProposeAppointment");

        BackToMainDoctorPage.setText("Back To Main Doctor Page");
        BackToMainDoctorPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMainDoctorPageActionPerformed(evt);
            }
        });

        LblAppointmentPatientID.setText("jLabel10");

        LblPotentialDate4.setText("jLabel10");

        LblPotentialDate5.setText("jLabel10");

        LblPotentialDate6.setText("jLabel10");

        LblConfirmedDate1.setText("jLabel10");

        CmbSelectAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSelectAppointmentActionPerformed(evt);
            }
        });

        jLabel24.setText("Select Appointment To View");

        javax.swing.GroupLayout PnlViewAppointmentsLayout = new javax.swing.GroupLayout(PnlViewAppointments);
        PnlViewAppointments.setLayout(PnlViewAppointmentsLayout);
        PnlViewAppointmentsLayout.setHorizontalGroup(
            PnlViewAppointmentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewAppointmentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlViewAppointmentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackToMainDoctorPage)
                    .addComponent(LblAppointmentPatientID)
                    .addComponent(LblPotentialDate4)
                    .addComponent(LblPotentialDate5)
                    .addComponent(LblPotentialDate6)
                    .addComponent(LblConfirmedDate1)
                    .addComponent(CmbSelectAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap(358, Short.MAX_VALUE))
        );
        PnlViewAppointmentsLayout.setVerticalGroup(
            PnlViewAppointmentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlViewAppointmentsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackToMainDoctorPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmbSelectAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LblAppointmentPatientID)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate4)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate5)
                .addGap(18, 18, 18)
                .addComponent(LblPotentialDate6)
                .addGap(18, 18, 18)
                .addComponent(LblConfirmedDate1)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        mainPanel.add(PnlViewAppointments, "PnlViewAppointments");

        jButton2.setText("Back To Main Page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel17.setText("Select Patient");

        jLabel18.setText("Note");

        TxtAreaCreatePatientNote.setColumns(20);
        TxtAreaCreatePatientNote.setRows(5);
        jScrollPane6.setViewportView(TxtAreaCreatePatientNote);

        BtnAddPatientNote.setText("Add Note");
        BtnAddPatientNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddPatientNoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlMakeNotesLayout = new javax.swing.GroupLayout(PnlMakeNotes);
        PnlMakeNotes.setLayout(PnlMakeNotesLayout);
        PnlMakeNotesLayout.setHorizontalGroup(
            PnlMakeNotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMakeNotesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlMakeNotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(CmbSelectPatientForNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnAddPatientNote))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        PnlMakeNotesLayout.setVerticalGroup(
            PnlMakeNotesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMakeNotesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(5, 5, 5)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmbSelectPatientForNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnAddPatientNote)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        mainPanel.add(PnlMakeNotes, "PnlMakeNotes");

        LblSecretaryMainPage.setText("Secretary Main Page");

        BtnCreateAppointmentPage.setText("Create Appointment");
        BtnCreateAppointmentPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateAppointmentPageActionPerformed(evt);
            }
        });

        BtnMedicinePage.setText("Medicine");
        BtnMedicinePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMedicinePageActionPerformed(evt);
            }
        });

        BtnApporvePatientAccountsPage.setText("Approve Patient Accounts");
        BtnApporvePatientAccountsPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApporvePatientAccountsPageActionPerformed(evt);
            }
        });

        BtnApproveRemovalRequestPage.setText("Approve Removal Requests");
        BtnApproveRemovalRequestPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApproveRemovalRequestPageActionPerformed(evt);
            }
        });

        BtnLogOutSecretary.setText("Log Out");
        BtnLogOutSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutSecretaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlSecretaryMainPageLayout = new javax.swing.GroupLayout(PnlSecretaryMainPage);
        PnlSecretaryMainPage.setLayout(PnlSecretaryMainPageLayout);
        PnlSecretaryMainPageLayout.setHorizontalGroup(
            PnlSecretaryMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlSecretaryMainPageLayout.createSequentialGroup()
                .addGroup(PnlSecretaryMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlSecretaryMainPageLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(PnlSecretaryMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnApproveRemovalRequestPage)
                            .addComponent(BtnApporvePatientAccountsPage)
                            .addComponent(BtnMedicinePage)
                            .addComponent(BtnCreateAppointmentPage)
                            .addComponent(LblSecretaryMainPage)))
                    .addGroup(PnlSecretaryMainPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnLogOutSecretary)))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        PnlSecretaryMainPageLayout.setVerticalGroup(
            PnlSecretaryMainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlSecretaryMainPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnLogOutSecretary)
                .addGap(130, 130, 130)
                .addComponent(LblSecretaryMainPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnCreateAppointmentPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnMedicinePage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnApporvePatientAccountsPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnApproveRemovalRequestPage)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        mainPanel.add(PnlSecretaryMainPage, "PnlSecretaryMainPage");

        jLabel25.setText("please Type the date in format dd/mm/yyyy ");

        jLabel26.setText("Potential Date 1");

        jLabel27.setText("Potential Date 2");

        jLabel28.setText("Potential Date 3");

        jLabel29.setText("Select Patient");

        jButton5.setText("Create Appointment");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel30.setText("Select Doctor");

        jButton6.setText("Back To Secretary Main Page ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlCreateAppointmentLayout = new javax.swing.GroupLayout(PnlCreateAppointment);
        PnlCreateAppointment.setLayout(PnlCreateAppointmentLayout);
        PnlCreateAppointmentLayout.setHorizontalGroup(
            PnlCreateAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlCreateAppointmentLayout.createSequentialGroup()
                .addGroup(PnlCreateAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlCreateAppointmentLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(PnlCreateAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(CmbSelectDoctorForAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtPotentialDate7, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(TxtPotentialDate8, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtPotentialDate9, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(CmbSelectPatientForAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)
                            .addComponent(jButton5)))
                    .addGroup(PnlCreateAppointmentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton6)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        PnlCreateAppointmentLayout.setVerticalGroup(
            PnlCreateAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlCreateAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(2, 2, 2)
                .addComponent(jLabel26)
                .addGap(2, 2, 2)
                .addComponent(TxtPotentialDate7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtPotentialDate8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addGap(5, 5, 5)
                .addComponent(TxtPotentialDate9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel29)
                .addGap(1, 1, 1)
                .addComponent(CmbSelectPatientForAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmbSelectDoctorForAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(66, 66, 66))
        );

        mainPanel.add(PnlCreateAppointment, "PnlCreateAppointment");

        jButton7.setText("Back To Secretary Main Page");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        CmbSelectMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSelectMedicineActionPerformed(evt);
            }
        });

        jLabel31.setText("Select Medicine");

        jLabel32.setText("Choose Restock Amount");

        btnRestockMedcine.setText("Restock Medicine");
        btnRestockMedcine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestockMedcineActionPerformed(evt);
            }
        });

        jLabel33.setText("Give Medicine");

        BtnGiveMedicine.setText("Give Selected Amount");
        BtnGiveMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGiveMedicineActionPerformed(evt);
            }
        });

        LblMedicineStock.setText("jLabel36");

        javax.swing.GroupLayout PnlMedicineLayout = new javax.swing.GroupLayout(PnlMedicine);
        PnlMedicine.setLayout(PnlMedicineLayout);
        PnlMedicineLayout.setHorizontalGroup(
            PnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7)
                    .addComponent(CmbSelectMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(SpnRestockAmountSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(btnRestockMedcine)
                    .addComponent(jLabel33)
                    .addComponent(SpnGiveMedicineAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnGiveMedicine)
                    .addComponent(LblMedicineStock)
                    .addComponent(jLabel42))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        PnlMedicineLayout.setVerticalGroup(
            PnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(23, 23, 23)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmbSelectMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(LblMedicineStock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpnRestockAmountSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRestockMedcine)
                .addGap(25, 25, 25)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SpnGiveMedicineAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnGiveMedicine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        mainPanel.add(PnlMedicine, "PnlMedicine");

        jButton8.setText("Back To Main Secretary Page");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        LblPotentialPatientName.setText("jLabel34");

        LblPotentialPatientAddress.setText("jLabel34");

        LblPotentialPatientPassword.setText("jLabel34");

        LblPotentialPatientGender.setText("jLabel34");

        lblPotentialPatientDoB.setText("jLabel34");

        CmbSelectAccountRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSelectAccountRequestActionPerformed(evt);
            }
        });

        jLabel34.setText("Choose Patient Request");

        BtnApproveAccountRequest.setText("Accept Account Request");
        BtnApproveAccountRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApproveAccountRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlPatientAccountRequestsLayout = new javax.swing.GroupLayout(PnlPatientAccountRequests);
        PnlPatientAccountRequests.setLayout(PnlPatientAccountRequestsLayout);
        PnlPatientAccountRequestsLayout.setHorizontalGroup(
            PnlPatientAccountRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlPatientAccountRequestsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlPatientAccountRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(LblPotentialPatientName)
                    .addComponent(LblPotentialPatientAddress)
                    .addComponent(LblPotentialPatientPassword)
                    .addComponent(LblPotentialPatientGender)
                    .addComponent(lblPotentialPatientDoB)
                    .addComponent(CmbSelectAccountRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(BtnApproveAccountRequest))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        PnlPatientAccountRequestsLayout.setVerticalGroup(
            PnlPatientAccountRequestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlPatientAccountRequestsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addGap(1, 1, 1)
                .addComponent(jLabel34)
                .addGap(3, 3, 3)
                .addComponent(CmbSelectAccountRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(LblPotentialPatientName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientGender)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPotentialPatientDoB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnApproveAccountRequest)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        mainPanel.add(PnlPatientAccountRequests, "PnlPatientAccountRequest");

        jButton10.setText("Back To Main Secretary Page");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel35.setText("Choose Patient Request");

        CmbSelectAccountRemovalRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSelectAccountRemovalRequestActionPerformed(evt);
            }
        });

        LblPotentialPatientName1.setText("jLabel34");

        LblPotentialPatientAddress1.setText("jLabel34");

        LblPotentialPatientPassword1.setText("jLabel34");

        LblPotentialPatientGender1.setText("jLabel34");

        lblPotentialPatientDoB1.setText("jLabel34");

        BtnApproveRemovalRequest.setText("Accept Removal Request");
        BtnApproveRemovalRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApproveRemovalRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlApproveRemovalRequestLayout = new javax.swing.GroupLayout(PnlApproveRemovalRequest);
        PnlApproveRemovalRequest.setLayout(PnlApproveRemovalRequestLayout);
        PnlApproveRemovalRequestLayout.setHorizontalGroup(
            PnlApproveRemovalRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlApproveRemovalRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlApproveRemovalRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addComponent(LblPotentialPatientName1)
                    .addComponent(LblPotentialPatientAddress1)
                    .addComponent(LblPotentialPatientPassword1)
                    .addComponent(LblPotentialPatientGender1)
                    .addComponent(lblPotentialPatientDoB1)
                    .addComponent(CmbSelectAccountRemovalRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(BtnApproveRemovalRequest))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        PnlApproveRemovalRequestLayout.setVerticalGroup(
            PnlApproveRemovalRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlApproveRemovalRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10)
                .addGap(1, 1, 1)
                .addComponent(jLabel35)
                .addGap(3, 3, 3)
                .addComponent(CmbSelectAccountRemovalRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(LblPotentialPatientName1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientAddress1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientPassword1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPotentialPatientGender1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPotentialPatientDoB1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnApproveRemovalRequest)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        mainPanel.add(PnlApproveRemovalRequest, "PnlApproveRemovalRequests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnPatientAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPatientAccountActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlRequestPatientAccount");
    }//GEN-LAST:event_BtnPatientAccountActionPerformed

    private void BtnLoginRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLoginRequestActionPerformed
        Login login;       
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        switch(CmbLoginAccountType.getSelectedItem().toString()){
            case "Patient":
                login = new PatientLogin();
                if (login.AttemptLogin(TxtPassword.getText(), TxtUsername.getText(), "AllAccounts") == true) {
                    CardLayout card = (CardLayout)mainPanel.getLayout();
                    card.show(mainPanel, "PnlPatientMainPage");
                    AccountFinder FindAccount = new AccountFinder();
//                    CurrentAccountID = FindAccount.FindAccount(TxtUsername.getText(), CmbLoginAccountType.getSelectedItem().toString());
                    ArrayList<Patient> AllPatients = allAccounts.getAllPatients();
                    for (int i = 0; i < AllPatients.size(); i++) {
                        if (AllPatients.get(i).getUserID().equals(TxtUsername.getText())) {
                            PatientAccount = AllPatients.get(i);
                            if (PatientAccount.getAppointmentNotification() == true) {
                                JDiaAppointmentNotification.setVisible(true);
                                PatientAccount.setAppointmentNotification(false);
                                accountSerialiser.writeObject(allAccounts);
                            } 
                            if (PatientAccount.getPrescriptionNotification() == true) {
                                JDiaPrescriptionNotification.setVisible(true);
                                PatientAccount.setPrescriptionNotification(false);
                                accountSerialiser.writeObject(allAccounts);
                            }
                            break;
                        }
                    }
                }   
                break;
            case "Doctor":
                login = new DoctorLogin();
                if (login.AttemptLogin(TxtPassword.getText(), TxtUsername.getText(), "AllAccounts") == true) {
                    CardLayout card = (CardLayout)mainPanel.getLayout();
                    card.show(mainPanel, "PnlDoctorMainPage");
                    AccountFinder FindAccount = new AccountFinder();
//                    CurrentAccountID = FindAccount.FindAccount(TxtUsername.getText(), CmbLoginAccountType.getSelectedItem().toString());
                    ArrayList<Doctor> AllDoctors = allAccounts.getAllDoctors();
                    for (int i = 0; i < AllDoctors.size(); i++) {
                        if (AllDoctors.get(i).getUserID().equals(TxtUsername.getText())) {
                            DoctorAccount = AllDoctors.get(i);
                            if (DoctorAccount.getAppointmentNotification() == true) {
                                JDiaAppointmentNotification.setVisible(true);
                                DoctorAccount.setAppointmentNotification(false);
                                accountSerialiser.writeObject(allAccounts);
                            }     
                            break;
                        }
                    }   
                    CmbSelectPatientForHistory.removeAllItems();
                    for (int i = 0; i < allAccounts.getAllPatients().size(); i++) {
                        CmbSelectPatientForHistory.addItem(allAccounts.getAllPatients().get(i).getUserID());
                    }
                }
                break;
                case "Admin":
                    login = new AdminLogin();
                    if (login.AttemptLogin(TxtPassword.getText(), TxtUsername.getText(), "AllAccounts") == true) {
                        CardLayout card = (CardLayout)mainPanel.getLayout();
                        card.show(mainPanel, "PnlAdminMainPage");
                        CmbChooseDoctorForFeedback.removeAllItems();
                        Admin admin = new Admin();
                        ArrayList<Object> Ratings  = admin.GetDoctorRatings();
                        for (int i = 0; i < Ratings.size()/3; i++) {
                            String DoctorID = Ratings.get(i*3+1).toString();
                            CmbChooseDoctorForFeedback.addItem(DoctorID);                       
                        }
                        AccountFinder FindAccount = new AccountFinder();
//                        CurrentAccountID = FindAccount.FindAccount(TxtUsername.getText(), CmbLoginAccountType.getSelectedItem().toString());
                        ArrayList<Admin> AllAdmins = allAccounts.getAllAdmins();
                        for (int i = 0; i < AllAdmins.size(); i++) {
                            if (AllAdmins.get(i).getUserID().equals(TxtUsername.getText())) {
                                AdminAccount = AllAdmins.get(i);                             
                                break;
                            }
                        }      
                    } 
                    break;
                case "Secretary":
                    login = new SecretaryLogin();
                    if (login.AttemptLogin(TxtPassword.getText(), TxtUsername.getText(), "AllAccounts") == true) {
                        CardLayout card = (CardLayout)mainPanel.getLayout();
                        card.show(mainPanel, "PnlSecretaryMainPage");
                        AccountFinder FindAccount = new AccountFinder();
//                        CurrentAccountID = FindAccount.FindAccount(TxtUsername.getText(), CmbLoginAccountType.getSelectedItem().toString());
                        ArrayList<Secretary> AllSecretarys = allAccounts.getAllSecretarys();
                        for (int i = 0; i < AllSecretarys.size(); i++) {
                            if (AllSecretarys.get(i).getUserID().equals(TxtUsername.getText())) {
                                SecretaryAccount = AllSecretarys.get(i);
                                SecretaryIndex = i;
                                if (SecretaryAccount.getAccountRequestNotification() == true) {
                                    JDiaAccounRequestNotification.setVisible(true);
                                    SecretaryAccount.setAccountRequestNotification(false);
                                    accountSerialiser.writeObject(allAccounts);
                                }
                                if (SecretaryAccount.getMedicineRequestNotification() == true) {
                                    JDiaMedicineRequest.setVisible(true);
                                    SecretaryAccount.setMedicineRequestNotification(false);
                                    accountSerialiser.writeObject(allAccounts);
                                }
                                if (SecretaryAccount.getRemovalRequestNotification() == true) {
                                    JDiaRemovalNotification.setVisible(true);
                                    SecretaryAccount.setRemovalRequestNotification(false);
                                    accountSerialiser.writeObject(allAccounts);
                                }
                                break;
                            }
                        }      
                    }   
                    
                    break;
        }    
        TxtPassword.setText("");
        TxtUsername.setText("");
    }//GEN-LAST:event_BtnLoginRequestActionPerformed

    private void BtnBackToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackToLoginActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlLogin");
    }//GEN-LAST:event_BtnBackToLoginActionPerformed

    private void BtnPatientAccountRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPatientAccountRequestActionPerformed
        CreateAccountRequest accountRequest = new CreateAccountRequest();
        String gender = CmbPotentialGender.getSelectedItem().toString();
        int Gender = 0;
        switch(gender){
            case "Male":
                Gender = 1;
                break;
            case "Female":
                Gender = 2;
                break;
            case "Other":
                Gender = 3;
                break;
        }
        String DoB = TxtPotentialDoB.getText();
        accountRequest.CreateNewAccountRequest(TxtPotentialName.getText(), TxtPotentialAddress.getText(), TxtPotentialPassword.getText(), Gender, TxtPotentialDoB.getText());
        TxtPotentialName.setText("");
        TxtPotentialAddress.setText("");
        TxtPotentialPassword.setText("");
        TxtPotentialDoB.setText("");
    }//GEN-LAST:event_BtnPatientAccountRequestActionPerformed

    private void TxtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPasswordActionPerformed

    private void TxtPotentialNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPotentialNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPotentialNameActionPerformed

    private void BtnAdmBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdmBack1ActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlAdminMainPage");
    }//GEN-LAST:event_BtnAdmBack1ActionPerformed

    private void BtnAdmCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdmCreateAccountActionPerformed
        
        AdminAccount.CreateAccount(CmbAdmCreateAccountType.getSelectedItem().toString(), TxtAdmCreateAccountPassword.getText(), TxtAdmCreateAccountName.getText(), TxtAdmCreateAccountAddress.getText());
        TxtAdmCreateAccountName.setText("");
        TxtAdmCreateAccountAddress.setText("");
        TxtAdmCreateAccountPassword.setText("");
    }//GEN-LAST:event_BtnAdmCreateAccountActionPerformed

    private void BtnAdmCreateAccountPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdmCreateAccountPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlCreateAccount");
    }//GEN-LAST:event_BtnAdmCreateAccountPageActionPerformed

    private void BtnAdmBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdmBack2ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlAdminMainPage");
    }//GEN-LAST:event_BtnAdmBack2ActionPerformed

    private void BtnRemoveAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRemoveAccountActionPerformed
       
        AdminAccount.RemoveAccount(CmbToBeRemovedAccountType.getSelectedItem().toString(), TxtAccountToBeRemoved.getText());
        TxtAccountToBeRemoved.setText("");
    }//GEN-LAST:event_BtnRemoveAccountActionPerformed

    private void BtnRemoveAccountPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRemoveAccountPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlRemoveAccounts");
    }//GEN-LAST:event_BtnRemoveAccountPageActionPerformed

    private void BtnBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackButtonActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, PreviousPage);
        CmbChooseDoctorForRating.removeAllItems();
    }//GEN-LAST:event_BtnBackButtonActionPerformed

    private void btnViewRatingsPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRatingsPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewDoctorRatings");       
        ArrayList<Object> Ratings  = AdminAccount.GetDoctorRatings();
        for (int i = 0; i < Ratings.size()/3; i++) {
            String DoctorID = Ratings.get(i*3+1).toString();
            CmbChooseDoctorForRating.addItem(DoctorID);
        }
        LblRatedDoctorName.setText(Ratings.get(0).toString());
        LblRatedDoctorID.setText(Ratings.get(1).toString());       
        if (Ratings.get(2).toString().equals("-1")) {
            LblRatedDoctorRating.setText("Doctor Not yet Rated");
        }
        else{
            LblRatedDoctorRating.setText(Ratings.get(2).toString());
        }                 
        PreviousPage = "PnlAdminMainPage";
    }//GEN-LAST:event_btnViewRatingsPageActionPerformed

    private void BtnGenerateFeedbackPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGenerateFeedbackPageActionPerformed
        CmbSelectComment.removeAllItems();
        TxtAreaFeedbackComment.setText("");
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlGenerateFeedback");       
        ArrayList<Object> FeedbackReport = AdminAccount.GenerateFeedbackReport(CmbChooseDoctorForFeedback.getSelectedItem().toString());
        LblFeedbackDoctorName.setText(CmbChooseDoctorForFeedback.getSelectedItem().toString());
        for (int i = 1; i < FeedbackReport.size()-1; i++) {
            CmbSelectComment.addItem("Comment " + i);
        }
        TxtAreaFeedbackComment.setText(FeedbackReport.get(1).toString());
        String rating = FeedbackReport.get(FeedbackReport.size()-1).toString();
        if (!rating.equals("-1")) {
            LblFeedbackRating.setText(rating);
        }
        else{
            LblFeedbackRating.setText("Doctor Not Yet Rated");
        }               
    }//GEN-LAST:event_BtnGenerateFeedbackPageActionPerformed

    private void BtnAdmBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdmBack4ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlAdminMainPage");
    }//GEN-LAST:event_BtnAdmBack4ActionPerformed

    private void CmbSelectCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSelectCommentActionPerformed
                ArrayList<Object> FeedbackReport = AdminAccount.GenerateFeedbackReport(CmbChooseDoctorForFeedback.getSelectedItem().toString());
        int Comment = CmbSelectComment.getSelectedIndex();
        TxtAreaFeedbackComment.setText(FeedbackReport.get(Comment + 1).toString());
    }//GEN-LAST:event_CmbSelectCommentActionPerformed

    private void CmbChooseDoctorForRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbChooseDoctorForRatingActionPerformed
       AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
       ArrayList<Admin> Admins = allAccounts.getAllAdmins();
       ArrayList<Object> Ratings  = Admins.get(0).GetDoctorRatings();  
       int Doctor = CmbChooseDoctorForRating.getSelectedIndex() * 3;
        if (CmbChooseDoctorForRating.getSelectedIndex() >= 0) {
            LblRatedDoctorName.setText(Ratings.get(Doctor).toString());
            LblRatedDoctorID.setText(Ratings.get(Doctor+1).toString());
            if (!Ratings.get(Doctor+2).toString().equals("-1")) {
                LblRatedDoctorRating.setText(Ratings.get(Doctor+2).toString());
            }
            else{
                LblRatedDoctorRating.setText("Doctor Not Yet Rated");
            }   
        }         
    }//GEN-LAST:event_CmbChooseDoctorForRatingActionPerformed

    private void TxtPotentialDate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPotentialDate3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPotentialDate3ActionPerformed

    private void BtnrequestAppointmentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnrequestAppointmentPageActionPerformed
        CmbPotentialDoctor.removeAllItems();
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlRequestAppointment");       
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Doctor> doctors = allAccounts.getAllDoctors();
        for (int i = 0; i < doctors.size(); i++) {
            CmbPotentialDoctor.addItem(doctors.get(i).getUserID());
        }
    }//GEN-LAST:event_BtnrequestAppointmentPageActionPerformed

    private void btnBackToPatientMain1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToPatientMain1ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlPatientMainPage");
    }//GEN-LAST:event_btnBackToPatientMain1ActionPerformed

    private void BtnRequestAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRequestAppointmentActionPerformed
       PatientAccount.RequestAppointment(TxtPotentialDate1.getText(), TxtPotentialDate2.getText(), TxtPotentialDate3.getText(), CmbPotentialDoctor.getSelectedItem().toString());
       TxtPotentialDate1.setText("");
       TxtPotentialDate2.setText("");
       TxtPotentialDate3.setText("");
    }//GEN-LAST:event_BtnRequestAppointmentActionPerformed

    private void BtnRequestAccountTerminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRequestAccountTerminationActionPerformed
        PatientAccount.RemoveAccount(TxtAccountTerminationPassword.getText());
    }//GEN-LAST:event_BtnRequestAccountTerminationActionPerformed

    private void BtnRateDoctorPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRateDoctorPageActionPerformed
        CmbDoctorToBeRated.removeAllItems();
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlRateDoctors");       
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Doctor> Doctors = allAccounts.getAllDoctors();
        for (int i = 0; i < Doctors.size(); i++) {
            CmbDoctorToBeRated.addItem(Doctors.get(i).getUserID());
        }
    }//GEN-LAST:event_BtnRateDoctorPageActionPerformed

    private void BtnSubmitDoctorFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSubmitDoctorFeedbackActionPerformed
        String Feedback = TxtAreaComment.getText();
        int Rating = CmbDoctorRating.getSelectedIndex()+1;
        int Doctor = CmbDoctorToBeRated.getSelectedIndex();
        PatientAccount.RateDoctor(Feedback, Rating, Doctor);
        TxtAreaComment.setText("");
    }//GEN-LAST:event_BtnSubmitDoctorFeedbackActionPerformed

    private void BtnBacktoPatientMainPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBacktoPatientMainPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, PreviousPage);
        CmbChooseAppointmentHistoryItem.removeAllItems();
    }//GEN-LAST:event_BtnBacktoPatientMainPageActionPerformed

    private void btnbackToMainPatientPage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackToMainPatientPage2ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlPatientMainPage");
    }//GEN-LAST:event_btnbackToMainPatientPage2ActionPerformed

    private void BtnBackToMainPatientPage3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackToMainPatientPage3ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlPatientMainPage");
    }//GEN-LAST:event_BtnBackToMainPatientPage3ActionPerformed

    private void BtnViewAppointmentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewAppointmentPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewAppointment");
        Appointment appointment = PatientAccount.ViewAppointment();
        if (appointment != null) {
            LblPotentialDate1.setText("Potential Date 1 = " +appointment.getPotentialDates().get(0).toString());
            LblPotentialDate2.setText("Potential Date 2 = " +appointment.getPotentialDates().get(1).toString());
            LblPotentialDate3.setText("Potential Date 3 = " +appointment.getPotentialDates().get(2).toString());
            LblAppointmentDoctorID.setText(appointment.getDoctorName());
            if (appointment.isAppointmentConfirmed() == true) {
                LblConfirmedDate.setText("Confirmed Date: " + appointment.getPotentialDates().get(0).toString());
            }
            else{
                LblConfirmedDate.setText("Confirmed Date: Date Not yet Confirmed");
            }
        }
        else{
            LblPotentialDate1.setText("No Current Appointment");
            LblPotentialDate2.setText("No Current Appointment");
            LblPotentialDate3.setText("No Current Appointment");
            LblAppointmentDoctorID.setText("No Current Appointment");
            LblConfirmedDate.setText("No Current Appointment");
        }
        
    }//GEN-LAST:event_BtnViewAppointmentPageActionPerformed

    private void BtnViewPrescriptionPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewPrescriptionPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewPrescription");
        Prescription prescription = PatientAccount.ViewPrescription();
        if (prescription != null) {
            LblMedicineName.setText("Medicine Name: "+ prescription.getMedicine().getMedicineName());
            LblDosage.setText("Dosage: "+ prescription.getDosage());
            TxtAreaDoctorNote.setText(prescription.getDoctorNote());
        }
        else{
            LblMedicineName.setText("No Prescription Active");
            LblDosage.setText("No Prescription Active");
            TxtAreaDoctorNote.setText("No Prescription Active");
        }
    }//GEN-LAST:event_BtnViewPrescriptionPageActionPerformed

    private void BtnPtnViewDoctorRatingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPtnViewDoctorRatingsActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewDoctorRatings");
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Admin> Admins = allAccounts.getAllAdmins();
        ArrayList<Object> Ratings  = Admins.get(0).GetDoctorRatings();        
        for (int i = 0; i < Ratings.size()/3; i++) {           
            String DoctorID = Ratings.get(i*3+1).toString();
            CmbChooseDoctorForRating.addItem(DoctorID);
        }
        String DoctorName = Ratings.get(0).toString();
        LblRatedDoctorName.setText(Ratings.get(0).toString());
        LblRatedDoctorID.setText(Ratings.get(1).toString());
        if (Ratings.get(2).toString().equals("-1")) {
            LblRatedDoctorRating.setText("Doctor Not yet Rated");
        }
        else{
            LblRatedDoctorRating.setText(Ratings.get(2).toString());
        }                  
        PreviousPage = "PnlPatientMainPage";
    }//GEN-LAST:event_BtnPtnViewDoctorRatingsActionPerformed

    private void btnViewOwnHistoryPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOwnHistoryPageActionPerformed
        PreviousPage = "PnlPatientMainPage";
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewOwnHistory");
        ArrayList<Appointment> appointments = PatientAccount.getAppointments();
        if (!appointments.isEmpty()) {
            for (int i = 0; i < appointments.size(); i++) {
             CmbChooseAppointmentHistoryItem.addItem("Appointment" + (appointments.size()-i));
            }
            LblHistoryDoctorName.setText("Doctor: "+appointments.get(0).getDoctorName());
            LblAppointmentDate.setText("Date: "+appointments.get(0).getConfirmedDate());
        }
        else{
            LblHistoryDoctorName.setText("No previous History");
            LblAppointmentDate.setText("No previous History");
        }       
    }//GEN-LAST:event_btnViewOwnHistoryPageActionPerformed

    private void CmbChooseAppointmentHistoryItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbChooseAppointmentHistoryItemActionPerformed
        int Index = CmbChooseAppointmentHistoryItem.getSelectedIndex();
        ArrayList<Appointment> appointments = PatientAccount.getAppointments();
        if (CmbChooseAppointmentHistoryItem.getSelectedIndex() >= 0) {
            LblHistoryDoctorName.setText("Doctor: "+appointments.get(Index).getDoctorName());
            LblAppointmentDate.setText("Date: "+appointments.get(Index).getConfirmedDate().toString());
        }       
    }//GEN-LAST:event_CmbChooseAppointmentHistoryItemActionPerformed

    private void BtnWritePrescriptionPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnWritePrescriptionPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlWritePrescription");
        CmbChoosePrescriptionPatient.removeAllItems();
        CmbChoosePrescriptionMedicine.removeAllItems();        
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Patient> Patients = allAccounts.getAllPatients();
        for (int i = 0; i < Patients.size(); i++) {
            CmbChoosePrescriptionPatient.addItem(Patients.get(i).getUserID());
        }
        AllMedicines allMedicines = (AllMedicines) medicineSerialiser.readObject();
        ArrayList<Medicine> Medicines = allMedicines.getAllMedicines();
        for (int i = 0; i < Medicines.size(); i++) {
            CmbChoosePrescriptionMedicine.addItem(Medicines.get(i).getMedicineName());
        }
    }//GEN-LAST:event_BtnWritePrescriptionPageActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DoctorAccount.CreatePrescription(CmbChoosePrescriptionPatient.getSelectedItem().toString(), TxtAreaPrescriptionNote.getText(), CmbChoosePrescriptionMedicine.getSelectedItem().toString(), Integer.parseInt(SpnChoosePresciptionQuantity.getValue().toString()), Integer.parseInt(SpnChoosePresciptionDosage.getValue().toString()));
        TxtAreaPrescriptionNote.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BtnDoctorBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDoctorBackButtonActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlDoctorMainPage");
    }//GEN-LAST:event_BtnDoctorBackButtonActionPerformed

    private void BtnCreateNewMedicinePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateNewMedicinePageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlCreateNewMedicine");
    }//GEN-LAST:event_BtnCreateNewMedicinePageActionPerformed

    private void btnCreateMedicineOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateMedicineOrderActionPerformed
        DoctorAccount.CreateMedicineAndOrder(TxtNewMedicineName.getText(), (int)SpnNewMedicineRestockAmount.getValue());
        TxtNewMedicineName.setText("");
    }//GEN-LAST:event_btnCreateMedicineOrderActionPerformed

    private void BtnAddPatientNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddPatientNoteActionPerformed
        DoctorAccount.CreatePatientNote(CmbSelectPatientForNote.getSelectedItem().toString(), TxtAreaCreatePatientNote.getText(), DoctorAccount.getUserID());
        TxtAreaCreatePatientNote.setText("");
    }//GEN-LAST:event_BtnAddPatientNoteActionPerformed

    private void BtnMakeNotesPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMakeNotesPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlMakeNotes");
        CmbSelectPatientForNote.removeAllItems();
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Patient> Patients = allAccounts.getAllPatients();
        for (int i = 0; i < Patients.size(); i++) {
            CmbSelectPatientForNote.addItem(Patients.get(i).getUserID());
        }
    }//GEN-LAST:event_BtnMakeNotesPageActionPerformed

    private void BtnProposeAppointmentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnProposeAppointmentPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlProposeAppointment");
        CmbSelectPatientForAppointment.removeAllItems();
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Patient> Patients = allAccounts.getAllPatients();
        for (int i = 0; i < Patients.size(); i++) {
            CmbSelectPatientForAppointment.addItem(Patients.get(i).getUserID());
        }
    }//GEN-LAST:event_BtnProposeAppointmentPageActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
               DoctorAccount.ProposeorCreateAppointment(TxtPotentialDate4.getText(), TxtPotentialDate5.getText(), TxtPotentialDate6.getText(), CmbSelectPatientForAppointment.getSelectedItem().toString(), ChkAppointmentConfirmed.isSelected());
               TxtPotentialDate4.setText("");
               TxtPotentialDate5.setText("");
               TxtPotentialDate6.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnDocViewAppointmentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocViewAppointmentPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewAppointments");        
        for (int i = 0; i < DoctorAccount.getPossibleAppointments().size(); i++) {
            CmbSelectAppointment.addItem("Appointment" + i+1);
        }
    }//GEN-LAST:event_btnDocViewAppointmentPageActionPerformed

    private void CmbSelectAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSelectAppointmentActionPerformed
        if (CmbSelectAppointment.getSelectedIndex() >= 0) {
            LblAppointmentPatientID.setText("Patient Name: "+DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).getPatientName());
            LblPotentialDate4.setText("Potential Date 1: " +DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).getPotentialDates().get(0).toString());
            LblPotentialDate5.setText("Potential Date 2: " +DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).getPotentialDates().get(1).toString());
            LblPotentialDate6.setText("Potential Date 3: " + DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).getPotentialDates().get(2).toString());
            if (DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).isAppointmentConfirmed() == true) {
                LblConfirmedDate1.setText("Confirmed Date: " + DoctorAccount.getPossibleAppointments().get(CmbSelectAppointment.getSelectedIndex()).getPotentialDates().get(0).toString());
            }
            else{
                LblConfirmedDate1.setText("Confirmed Date: Date Not yet Confirmed");
            }
        }
        
    }//GEN-LAST:event_CmbSelectAppointmentActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PreviousPage = "PnlDoctorMainPage";
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlViewOwnHistory");
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Patient> patients = allAccounts.getAllPatients();
        PatientAccount = patients.get(CmbSelectPatientForHistory.getSelectedIndex());
        ArrayList<Appointment> appointments = patients.get(CmbSelectPatientForHistory.getSelectedIndex()).getAppointments();
        if (!appointments.isEmpty()) {
            for (int i = 0; i < appointments.size(); i++) {
                CmbChooseAppointmentHistoryItem.addItem("Appointment " + (appointments.size()-i));
            }
            String Test1 = appointments.get(0).getDoctorName();
            String Test2 = appointments.get(0).getConfirmedDate().toString();
            LblHistoryDoctorName.setText("Doctor: "+appointments.get(0).getDoctorName());
            LblAppointmentDate.setText("Date: "+appointments.get(0).getConfirmedDate().toString());
        }
        else{
            LblHistoryDoctorName.setText("No previous History");
            LblAppointmentDate.setText("No previous History");
        }         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void BtnBackToDoctorMain1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackToDoctorMain1ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlDoctorMainPage");
    }//GEN-LAST:event_BtnBackToDoctorMain1ActionPerformed

    private void btnBackToDoctorMainPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToDoctorMainPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlDoctorMainPage");
    }//GEN-LAST:event_btnBackToDoctorMainPageActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlDoctorMainPage");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        SecretaryAccount.RequestAppointment(TxtPotentialDate7.getText(), TxtPotentialDate8.getText(), TxtPotentialDate9.getText(), CmbSelectPatientForAppointment1.getSelectedItem().toString(), CmbSelectDoctorForAppointment.getSelectedItem().toString());
        TxtPotentialDate7.setText("");
        TxtPotentialDate8.setText("");
        TxtPotentialDate9.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlSecretaryMainPage");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnRestockMedcineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestockMedcineActionPerformed
        int medicine = CmbSelectMedicine.getSelectedIndex();
        String restockAmount = SpnRestockAmountSec.getValue().toString();
        int restockValue = Integer.parseInt(restockAmount);
        SecretaryAccount.RestockMedicine(medicine, restockValue);
        AllMedicines allMedicines = (AllMedicines) medicineSerialiser.readObject();
        LblMedicineStock.setText("Stock: " + allMedicines.getAllMedicines().get(medicine).getStock());
    }//GEN-LAST:event_btnRestockMedcineActionPerformed

    private void BtnApproveAccountRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApproveAccountRequestActionPerformed
        SecretaryAccount.CreatePatientAccount(SecretaryAccount.getAccountRequests().get(CmbSelectAccountRequest.getSelectedIndex()), CmbSelectAccountRequest.getSelectedIndex());               
//        CmbSelectAccountRequest.removeItem(CmbSelectAccountRequest.getSelectedIndex());
        CmbSelectAccountRequest.removeAllItems();
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Secretary> AllSecretarys = allAccounts.getAllSecretarys();
        SecretaryAccount = AllSecretarys.get(SecretaryIndex);        
        for (int i = 0; i < SecretaryAccount.getAccountRequests().size(); i++) {
            CmbSelectAccountRequest.addItem("Account Request "+ (i+1));
        }        
        if (SecretaryAccount.getAccountRequests().size() > 0) {            
            LblPotentialPatientName.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPatientName());
        LblPotentialPatientAddress.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPatientAddress());
        LblPotentialPatientPassword.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPassword());
            switch(SecretaryAccount.getAccountRequests().get(0).getPotentialGender()){
                case 1:
                    LblPotentialPatientGender.setText("male");
                    break;
                case 2:
                    LblPotentialPatientGender.setText("female");
                    break;
                case 3:
                    LblPotentialPatientGender.setText("other");
                    break;
            }                                            
        lblPotentialPatientDoB.setText(SecretaryAccount.getAccountRequests().get(0).getDoB().toString());
        }
        else{
            LblPotentialPatientName.setText("");
            LblPotentialPatientAddress.setText("");
            LblPotentialPatientPassword.setText("");
            LblPotentialPatientGender.setText("");
            lblPotentialPatientDoB.setText("");
        }            
    }//GEN-LAST:event_BtnApproveAccountRequestActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlSecretaryMainPage");
        CmbSelectAccountRequest.removeAllItems();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void BtnApproveRemovalRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApproveRemovalRequestActionPerformed
        RemoveAccountRequest removeAccountRequest = SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex());
        SecretaryAccount.RemovePatientAccount(removeAccountRequest, CmbSelectAccountRemovalRequest.getSelectedIndex());
        CmbSelectAccountRemovalRequest.removeAllItems();
        for (int i = 0; i < SecretaryAccount.getRemovalRequests().size(); i++) {
            CmbSelectAccountRemovalRequest.addItem("Removal request "+ i+1);
        }
        LblPotentialPatientName1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getName());
        LblPotentialPatientAddress1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getAddress());
        LblPotentialPatientPassword1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getPassword());
        LblPotentialPatientGender1.setText(""+SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getGender());
        lblPotentialPatientDoB1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getDob().toString());       
    }//GEN-LAST:event_BtnApproveRemovalRequestActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CmbSelectMedicine.removeAllItems();
        jLabel42.setText("");
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlSecretaryMainPage");       
    }//GEN-LAST:event_jButton7ActionPerformed

    private void BtnCreateAppointmentPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateAppointmentPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlCreateAppointment");
        CmbSelectPatientForAppointment1.removeAllItems();
        CmbSelectDoctorForAppointment.removeAllItems();
        AllAccounts allAccounts = (AllAccounts) accountSerialiser.readObject();
        ArrayList<Doctor> doctors = allAccounts.getAllDoctors();
        ArrayList<Patient> patients = allAccounts.getAllPatients();
        for (int i = 0; i < doctors.size(); i++) {
            CmbSelectDoctorForAppointment.addItem(doctors.get(i).getUserID());
        }
        for (int i = 0; i < patients.size(); i++) {
            CmbSelectPatientForAppointment1.addItem(patients.get(i).getUserID());
        }
    }//GEN-LAST:event_BtnCreateAppointmentPageActionPerformed

    private void BtnMedicinePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMedicinePageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlMedicine");        
        AllMedicines allMedicines = (AllMedicines) medicineSerialiser.readObject();
        ArrayList<Medicine> medicines = allMedicines.getAllMedicines();
        for (int i = 0; i < medicines.size(); i++) {
            CmbSelectMedicine.addItem(medicines.get(i).getMedicineName());
        }
        LblMedicineStock.setText("Stock: " + medicines.get(0).getStock());
    }//GEN-LAST:event_BtnMedicinePageActionPerformed

    private void CmbSelectMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSelectMedicineActionPerformed
        AllMedicines allMedicines = (AllMedicines) medicineSerialiser.readObject();
        ArrayList<Medicine> medicines = allMedicines.getAllMedicines();
        if (CmbSelectMedicine.getSelectedIndex() >= 0) {
            LblMedicineStock.setText("Stock: " + medicines.get(CmbSelectMedicine.getSelectedIndex()).getStock());
        }       
    }//GEN-LAST:event_CmbSelectMedicineActionPerformed

    private void BtnGiveMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGiveMedicineActionPerformed
        String givenAmount = SpnGiveMedicineAmount.getValue().toString();
        int givenValue = Integer.parseInt(givenAmount);
        int medicineIndex = CmbSelectMedicine.getSelectedIndex();
        boolean MedicineGiven = SecretaryAccount.GiveMedicine(medicineIndex, givenValue);
        if (MedicineGiven == true) {
            jLabel42.setText("Medicine Given");
        }
        else{
            jLabel42.setText("Medicine Not Given");
        }
        AllMedicines allMedicines = (AllMedicines) medicineSerialiser.readObject();
        LblMedicineStock.setText("Stock: " + allMedicines.getAllMedicines().get(medicineIndex).getStock());
    }//GEN-LAST:event_BtnGiveMedicineActionPerformed

    private void BtnApproveRemovalRequestPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApproveRemovalRequestPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlApproveRemovalRequests");       
        for (int i = 0; i < SecretaryAccount.getRemovalRequests().size(); i++) {
            CmbSelectAccountRemovalRequest.addItem("Removal request "+ i+1);
        }
        if (SecretaryAccount.getRemovalRequests().size() > 0) {
            LblPotentialPatientName1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getName());
        LblPotentialPatientAddress1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getAddress());
        LblPotentialPatientPassword1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getPassword());
        LblPotentialPatientGender1.setText(""+SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getGender());
        lblPotentialPatientDoB1.setText(SecretaryAccount.getRemovalRequests().get(0).getAccountToBeRemoved().getDob().toString());
        }
        else{
        LblPotentialPatientName1.setText("");
        LblPotentialPatientAddress1.setText("");
        LblPotentialPatientPassword1.setText("");
        LblPotentialPatientGender1.setText("");
        lblPotentialPatientDoB1.setText("");
        
        }
    }//GEN-LAST:event_BtnApproveRemovalRequestPageActionPerformed

    private void CmbSelectAccountRemovalRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSelectAccountRemovalRequestActionPerformed
        if (CmbSelectAccountRemovalRequest.getSelectedIndex() >= 0) {
            LblPotentialPatientName1.setText(SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex()).getAccountToBeRemoved().getName());
            LblPotentialPatientAddress1.setText(SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex()).getAccountToBeRemoved().getAddress());
            LblPotentialPatientPassword1.setText(SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex()).getAccountToBeRemoved().getPassword());
            LblPotentialPatientGender1.setText(""+SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex()).getAccountToBeRemoved().getGender());
            lblPotentialPatientDoB1.setText(SecretaryAccount.getRemovalRequests().get(CmbSelectAccountRemovalRequest.getSelectedIndex()).getAccountToBeRemoved().getDob().toString());
        }       
    }//GEN-LAST:event_CmbSelectAccountRemovalRequestActionPerformed

    private void BtnApporvePatientAccountsPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApporvePatientAccountsPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlPatientAccountRequest");
        for (int i = 0; i < SecretaryAccount.getAccountRequests().size(); i++) {
            CmbSelectAccountRequest.addItem("Account Request "+ (i+1));
        }
        LblPotentialPatientName.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPatientName());
        LblPotentialPatientAddress.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPatientAddress());
        LblPotentialPatientPassword.setText(SecretaryAccount.getAccountRequests().get(0).getPotentialPassword());
        switch(SecretaryAccount.getAccountRequests().get(0).getPotentialGender()){
                case 1:
                    LblPotentialPatientGender.setText("male");
                    break;
                case 2:
                    LblPotentialPatientGender.setText("female");
                    break;
                case 3:
                    LblPotentialPatientGender.setText("other");
                    break;
            }     
        lblPotentialPatientDoB.setText(SecretaryAccount.getAccountRequests().get(0).getDoB().toString());
    }//GEN-LAST:event_BtnApporvePatientAccountsPageActionPerformed

    private void CmbSelectAccountRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSelectAccountRequestActionPerformed
        if (CmbSelectAccountRequest.getSelectedIndex() >= 0) {
            LblPotentialPatientName.setText(SecretaryAccount.getAccountRequests().get( CmbSelectAccountRequest.getSelectedIndex()).getPotentialPatientName());
            LblPotentialPatientAddress.setText(SecretaryAccount.getAccountRequests().get( CmbSelectAccountRequest.getSelectedIndex()).getPotentialPatientAddress());
            LblPotentialPatientPassword.setText(SecretaryAccount.getAccountRequests().get( CmbSelectAccountRequest.getSelectedIndex()).getPotentialPassword());
            switch(SecretaryAccount.getAccountRequests().get(0).getPotentialGender()){
                case 1:
                    LblPotentialPatientGender.setText("male");
                    break;
                case 2:
                    LblPotentialPatientGender.setText("female");
                    break;
                case 3:
                    LblPotentialPatientGender.setText("other");
                    break;
            }     
            lblPotentialPatientDoB.setText(SecretaryAccount.getAccountRequests().get( CmbSelectAccountRequest.getSelectedIndex()).getDoB().toString());
        }      
    }//GEN-LAST:event_CmbSelectAccountRequestActionPerformed

    private void BtnLogOutAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutAdminActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlLogin");
    }//GEN-LAST:event_BtnLogOutAdminActionPerformed

    private void BtnLogOutSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutSecretaryActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlLogin");
    }//GEN-LAST:event_BtnLogOutSecretaryActionPerformed

    private void BtnLogOutDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutDoctorActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlLogin");
    }//GEN-LAST:event_BtnLogOutDoctorActionPerformed

    private void BtnLogOutPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutPatientActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlLogin");
    }//GEN-LAST:event_BtnLogOutPatientActionPerformed

    private void BtnBackToPatientMainPage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackToPatientMainPage2ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlPatientMainPage");
    }//GEN-LAST:event_BtnBackToPatientMainPage2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlSecretaryMainPage");
        CmbSelectAccountRemovalRequest.removeAllItems();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void BackToMainDoctorPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMainDoctorPageActionPerformed
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PnlDoctorMainPage");
        CmbSelectAppointment.removeAllItems();
    }//GEN-LAST:event_BackToMainDoctorPageActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        JDiaAppointmentNotification.dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        JDiaPrescriptionNotification.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        JDiaRemovalNotification.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        JDiaAccounRequestNotification.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        JDiaMedicineRequest.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToMainDoctorPage;
    private javax.swing.JButton BtnAddPatientNote;
    private javax.swing.JButton BtnAdmBack1;
    private javax.swing.JButton BtnAdmBack2;
    private javax.swing.JButton BtnAdmBack4;
    private javax.swing.JButton BtnAdmCreateAccount;
    private javax.swing.JButton BtnAdmCreateAccountPage;
    private javax.swing.JButton BtnApporvePatientAccountsPage;
    private javax.swing.JButton BtnApproveAccountRequest;
    private javax.swing.JButton BtnApproveRemovalRequest;
    private javax.swing.JButton BtnApproveRemovalRequestPage;
    private javax.swing.JButton BtnBackButton;
    private javax.swing.JButton BtnBackToDoctorMain1;
    private javax.swing.JButton BtnBackToLogin;
    private javax.swing.JButton BtnBackToMainPatientPage3;
    private javax.swing.JButton BtnBackToPatientMainPage2;
    private javax.swing.JButton BtnBacktoPatientMainPage;
    private javax.swing.JButton BtnCreateAppointmentPage;
    private javax.swing.JButton BtnCreateNewMedicinePage;
    private javax.swing.JButton BtnDoctorBackButton;
    private javax.swing.JButton BtnGenerateFeedbackPage;
    private javax.swing.JButton BtnGiveMedicine;
    private javax.swing.JButton BtnLogOutAdmin;
    private javax.swing.JButton BtnLogOutDoctor;
    private javax.swing.JButton BtnLogOutPatient;
    private javax.swing.JButton BtnLogOutSecretary;
    private javax.swing.JButton BtnLoginRequest;
    private javax.swing.JButton BtnMakeNotesPage;
    private javax.swing.JButton BtnMedicinePage;
    private javax.swing.JButton BtnPatientAccount;
    private javax.swing.JButton BtnPatientAccountRequest;
    private javax.swing.JButton BtnProposeAppointmentPage;
    private javax.swing.JButton BtnPtnViewDoctorRatings;
    private javax.swing.JButton BtnRateDoctorPage;
    private javax.swing.JButton BtnRemoveAccount;
    private javax.swing.JButton BtnRemoveAccountPage;
    private javax.swing.JButton BtnRequestAccountTermination;
    private javax.swing.JButton BtnRequestAppointment;
    private javax.swing.JButton BtnSubmitDoctorFeedback;
    private javax.swing.JButton BtnViewAppointmentPage;
    private javax.swing.JButton BtnViewPrescriptionPage;
    private javax.swing.JButton BtnWritePrescriptionPage;
    private javax.swing.JButton BtnrequestAppointmentPage;
    private javax.swing.JCheckBox ChkAppointmentConfirmed;
    private javax.swing.JComboBox<String> CmbAdmCreateAccountType;
    private javax.swing.JComboBox<String> CmbChooseAppointmentHistoryItem;
    private javax.swing.JComboBox<String> CmbChooseDoctorForFeedback;
    private javax.swing.JComboBox<String> CmbChooseDoctorForRating;
    private javax.swing.JComboBox<String> CmbChoosePrescriptionMedicine;
    private javax.swing.JComboBox<String> CmbChoosePrescriptionPatient;
    private javax.swing.JComboBox<String> CmbDoctorRating;
    private javax.swing.JComboBox<String> CmbDoctorToBeRated;
    private javax.swing.JComboBox<String> CmbLoginAccountType;
    private javax.swing.JComboBox<String> CmbPotentialDoctor;
    private javax.swing.JComboBox<String> CmbPotentialGender;
    private javax.swing.JComboBox<String> CmbSelectAccountRemovalRequest;
    private javax.swing.JComboBox<String> CmbSelectAccountRequest;
    private javax.swing.JComboBox<String> CmbSelectAppointment;
    private javax.swing.JComboBox<String> CmbSelectComment;
    private javax.swing.JComboBox<String> CmbSelectDoctorForAppointment;
    private javax.swing.JComboBox<String> CmbSelectMedicine;
    private javax.swing.JComboBox<String> CmbSelectPatientForAppointment;
    private javax.swing.JComboBox<String> CmbSelectPatientForAppointment1;
    private javax.swing.JComboBox<String> CmbSelectPatientForHistory;
    private javax.swing.JComboBox<String> CmbSelectPatientForNote;
    private javax.swing.JComboBox<String> CmbToBeRemovedAccountType;
    private javax.swing.JDialog JDiaAccounRequestNotification;
    private javax.swing.JDialog JDiaAppointmentNotification;
    private javax.swing.JDialog JDiaMedicineRequest;
    private javax.swing.JDialog JDiaPrescriptionNotification;
    private javax.swing.JDialog JDiaRemovalNotification;
    private javax.swing.JLabel LblAdmCreateAccountAddress;
    private javax.swing.JLabel LblAdmCreateAccountName;
    private javax.swing.JLabel LblAdmCreateAccountPassword;
    private javax.swing.JLabel LblAdmCreateAccountType;
    private javax.swing.JLabel LblAdminMainPage;
    private javax.swing.JLabel LblAppointmentDate;
    private javax.swing.JLabel LblAppointmentDoctorID;
    private javax.swing.JLabel LblAppointmentPatientID;
    private javax.swing.JLabel LblConfirmedDate;
    private javax.swing.JLabel LblConfirmedDate1;
    private javax.swing.JLabel LblDoctorMainPage;
    private javax.swing.JLabel LblDosage;
    private javax.swing.JLabel LblFeedbackDoctorName;
    private javax.swing.JLabel LblFeedbackRating;
    private javax.swing.JLabel LblHistoryDoctorName;
    private javax.swing.JLabel LblLoginAccountTYpe;
    private javax.swing.JLabel LblLoginPassword;
    private javax.swing.JLabel LblLoginUsername;
    private javax.swing.JLabel LblMedicineName;
    private javax.swing.JLabel LblMedicineStock;
    private javax.swing.JLabel LblPatientMainPage;
    private javax.swing.JLabel LblPotentialAddress;
    private javax.swing.JLabel LblPotentialDate1;
    private javax.swing.JLabel LblPotentialDate2;
    private javax.swing.JLabel LblPotentialDate3;
    private javax.swing.JLabel LblPotentialDate4;
    private javax.swing.JLabel LblPotentialDate5;
    private javax.swing.JLabel LblPotentialDate6;
    private javax.swing.JLabel LblPotentialDoB;
    private javax.swing.JLabel LblPotentialGender;
    private javax.swing.JLabel LblPotentialName;
    private javax.swing.JLabel LblPotentialPassword;
    private javax.swing.JLabel LblPotentialPatientAddress;
    private javax.swing.JLabel LblPotentialPatientAddress1;
    private javax.swing.JLabel LblPotentialPatientGender;
    private javax.swing.JLabel LblPotentialPatientGender1;
    private javax.swing.JLabel LblPotentialPatientName;
    private javax.swing.JLabel LblPotentialPatientName1;
    private javax.swing.JLabel LblPotentialPatientPassword;
    private javax.swing.JLabel LblPotentialPatientPassword1;
    private javax.swing.JLabel LblRatedDoctorID;
    private javax.swing.JLabel LblRatedDoctorName;
    private javax.swing.JLabel LblRatedDoctorRating;
    private javax.swing.JLabel LblSecretaryMainPage;
    private javax.swing.JLabel LblToBeRemovedAccountType;
    private javax.swing.JLabel LblToBeRemovedID;
    private javax.swing.JPanel PnlAdminMainPage;
    private javax.swing.JPanel PnlApproveRemovalRequest;
    private javax.swing.JPanel PnlCreateAccount;
    private javax.swing.JPanel PnlCreateAppointment;
    private javax.swing.JPanel PnlCreateNewMedicine;
    private javax.swing.JPanel PnlDoctorMainPage;
    private javax.swing.JPanel PnlGenerateFeedback;
    private javax.swing.JPanel PnlLogin;
    private javax.swing.JPanel PnlMakeNotes;
    private javax.swing.JPanel PnlMedicine;
    private javax.swing.JPanel PnlPatientAccountRequests;
    private javax.swing.JPanel PnlPatientMainPage;
    private javax.swing.JPanel PnlProposeAppointment;
    private javax.swing.JPanel PnlRateDoctors;
    private javax.swing.JPanel PnlRemoveAccounts;
    private javax.swing.JPanel PnlRequestAppointment;
    private javax.swing.JPanel PnlRequestPatientAccount;
    private javax.swing.JPanel PnlSecretaryMainPage;
    private javax.swing.JPanel PnlViewAppointment;
    private javax.swing.JPanel PnlViewAppointments;
    private javax.swing.JPanel PnlViewDoctorRatings;
    private javax.swing.JPanel PnlViewOwnHistory;
    private javax.swing.JPanel PnlViewPrescription;
    private javax.swing.JPanel PnlWritePrescription;
    private javax.swing.JSpinner SpnChoosePresciptionDosage;
    private javax.swing.JSpinner SpnChoosePresciptionQuantity;
    private javax.swing.JSpinner SpnGiveMedicineAmount;
    private javax.swing.JSpinner SpnNewMedicineRestockAmount;
    private javax.swing.JSpinner SpnRestockAmountSec;
    private javax.swing.JTextField TxtAccountTerminationPassword;
    private javax.swing.JTextField TxtAccountToBeRemoved;
    private javax.swing.JTextField TxtAdmCreateAccountAddress;
    private javax.swing.JTextField TxtAdmCreateAccountName;
    private javax.swing.JTextField TxtAdmCreateAccountPassword;
    private javax.swing.JTextArea TxtAreaComment;
    private javax.swing.JTextArea TxtAreaCreatePatientNote;
    private javax.swing.JTextArea TxtAreaDoctorNote;
    private javax.swing.JTextArea TxtAreaFeedbackComment;
    private javax.swing.JTextArea TxtAreaPrescriptionNote;
    private javax.swing.JTextField TxtNewMedicineName;
    private javax.swing.JTextField TxtPassword;
    private javax.swing.JTextField TxtPotentialAddress;
    private javax.swing.JTextField TxtPotentialDate1;
    private javax.swing.JTextField TxtPotentialDate2;
    private javax.swing.JTextField TxtPotentialDate3;
    private javax.swing.JTextField TxtPotentialDate4;
    private javax.swing.JTextField TxtPotentialDate5;
    private javax.swing.JTextField TxtPotentialDate6;
    private javax.swing.JTextField TxtPotentialDate7;
    private javax.swing.JTextField TxtPotentialDate8;
    private javax.swing.JTextField TxtPotentialDate9;
    private javax.swing.JTextField TxtPotentialDoB;
    private javax.swing.JTextField TxtPotentialName;
    private javax.swing.JTextField TxtPotentialPassword;
    private javax.swing.JTextField TxtUsername;
    private javax.swing.JButton btnBackToDoctorMainPage;
    private javax.swing.JButton btnBackToPatientMain1;
    private javax.swing.JButton btnCreateMedicineOrder;
    private javax.swing.JButton btnDocViewAppointmentPage;
    private javax.swing.JButton btnRestockMedcine;
    private javax.swing.JButton btnViewOwnHistoryPage;
    private javax.swing.JButton btnViewRatingsPage;
    private javax.swing.JButton btnbackToMainPatientPage2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblPotentialPatientDoB;
    private javax.swing.JLabel lblPotentialPatientDoB1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
